"use strict";(self.webpackChunktextbook_source=self.webpackChunktextbook_source||[]).push([[3193],{9597:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var s=n(4848),r=n(8453),a=n(3514),o=n(2487);const i={title:"Chapter 5. Complex Data Types"},l=void 0,c={id:"textbook/chapter_05/index",title:"Chapter 5. Complex Data Types",description:"In  we discussed 'simple', or 'fundamental',",source:"@site/docs/textbook/chapter_05/index.mdx",sourceDirName:"textbook/chapter_05",slug:"/textbook/chapter_05/",permalink:"/textbook/docs/textbook/chapter_05/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Chapter 5. Complex Data Types"},sidebar:"textbookSidebar",previous:{title:"If Statements and Logical Operators",permalink:"/textbook/docs/textbook/chapter_04/00-60"},next:{title:"Complex Data Concepts",permalink:"/textbook/docs/textbook/chapter_05/00-10"}},d={},u=[];function p(e){const t={a:"a",admonition:"admonition",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["In ",(0,s.jsx)(o.DisplayChapter,{chapter:"chapter_03"})," we discussed 'simple', or 'fundamental',\ndata types, such as ",(0,s.jsx)(o.DisplayGlossaryItem,{item:"integer",plural:!0}),",\n",(0,s.jsx)(o.DisplayGlossaryItem,{item:"string",plural:!0})," and\n",(0,s.jsx)(o.DisplayGlossaryItem,{item:"boolean",plural:!0}),".  In this chapter we'll discuss\nmore complex data types.  These data types allow you to collect simple data types\ntogether in a more complex, and more useful, data structure."]}),"\n",(0,s.jsxs)(t.p,{children:["For example, let's say we want to collect information about a community legal centre\n(",(0,s.jsx)(t.strong,{children:"CLC"}),").  There's lots of information that pertains to a CLC, for example:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"its name (a string);"}),"\n",(0,s.jsx)(t.li,{children:"its address (string);"}),"\n",(0,s.jsx)(t.li,{children:"contact email (string);"}),"\n",(0,s.jsx)(t.li,{children:"contact phone (string); and"}),"\n",(0,s.jsx)(t.li,{children:"the number of employees it has (integer)."}),"\n"]}),"\n",(0,s.jsx)(t.admonition,{title:"Phone numbers are strings",type:"note",children:(0,s.jsx)(t.p,{children:"You might initially think it would be best to collect a phone number as an integer as,\nafter all, a phone number (0401234567) is an integer.  However, it's better to collect\nphone numbers as strings.  This allows us to embed formatting using spaces\n(eg: 0401 234 567) and country codes (eg: +61 401 234 567) into the phone number."})}),"\n",(0,s.jsx)(t.p,{children:"We can collect all that information with a set of string variables and an integer variable,\nbut what we'd really like to do is represent that all these otherwise independent variables\nall relate to the same CLC."}),"\n",(0,s.jsx)(t.p,{children:"Let's also say that instead of collecting this information about just one CLC we want to\ncollect this information about all the CLCs operating in South Australia.  We might do\nthis for an app that directs a user to the appropriate CLC depending on their Location\nand other circumstances."}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://dev.dll.org.au/da/interview?i=docassemble.CLCSA01ServiceDirectory:data/questions/main.yml#page1",children:"Here is an example"}),"\nof just such an app developed for Community Legal Centres SA (",(0,s.jsx)(t.strong,{children:"CLCSA"}),") in 2020."]})}),"\n",(0,s.jsxs)(t.p,{children:["This is where complex data types, such as ",(0,s.jsx)(o.DisplayGlossaryItem,{item:"dictionary",plural:!0}),",\n",(0,s.jsx)(o.DisplayGlossaryItem,{item:"list",plural:!0})," and ",(0,s.jsx)(o.DisplayGlossaryItem,{item:"object",plural:!0}),"\ncome into play.  We can use these datatypes to group related data together.  This makes\nour data much easier to manage and also more logical to deal with."]}),"\n",(0,s.jsx)(t.p,{children:"Let's get going."}),"\n",(0,s.jsx)(a.A,{})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},3514:(e,t,n)=>{n.d(t,{A:()=>j});n(6540);var s=n(8215),r=n(1754),a=n(8774),o=n(5846),i=n(6654),l=n(1312),c=n(1107);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var u=n(4848);function p(e){let{href:t,children:n}=e;return(0,u.jsx)(a.A,{href:t,className:(0,s.A)("card padding--lg",d.cardContainer),children:n})}function h(e){let{href:t,icon:n,title:r,description:a}=e;return(0,u.jsxs)(p,{href:t,children:[(0,u.jsxs)(c.A,{as:"h2",className:(0,s.A)("text--truncate",d.cardTitle),title:r,children:[n," ",r]}),a&&(0,u.jsx)("p",{className:(0,s.A)("text--truncate",d.cardDescription),title:a,children:a})]})}function m(e){let{item:t}=e;const n=(0,r.Nr)(t),s=function(){const{selectMessage:e}=(0,o.W)();return t=>e(t,(0,l.T)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return n?(0,u.jsx)(h,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??s(t.items.length)}):null}function x(e){let{item:t}=e;const n=(0,i.A)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",s=(0,r.cC)(t.docId??void 0);return(0,u.jsx)(h,{href:t.href,icon:n,title:t.label,description:t.description??s?.description})}function g(e){let{item:t}=e;switch(t.type){case"link":return(0,u.jsx)(x,{item:t});case"category":return(0,u.jsx)(m,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function f(e){let{className:t}=e;const n=(0,r.$S)();return(0,u.jsx)(j,{items:n.items,className:t})}function j(e){const{items:t,className:n}=e;if(!t)return(0,u.jsx)(f,{...e});const a=(0,r.d1)(t);return(0,u.jsx)("section",{className:(0,s.A)("row",n),children:a.map(((e,t)=>(0,u.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,u.jsx)(g,{item:e})},t)))})}},5846:(e,t,n)=>{n.d(t,{W:()=>c});var s=n(6540),r=n(4586);const a=["zero","one","two","few","many","other"];function o(e){return a.filter((t=>e.includes(t)))}const i={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function l(){const{i18n:{currentLocale:e}}=(0,r.A)();return(0,s.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:o(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),i}}),[e])}function c(){const e=l();return{selectMessage:(t,n)=>function(e,t,n){const s=e.split("|");if(1===s.length)return s[0];s.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${s.length}: ${e}`);const r=n.select(t),a=n.pluralForms.indexOf(r);return s[Math.min(a,s.length-1)]}(n,t,e)}}}}]);
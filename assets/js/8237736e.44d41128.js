"use strict";(self.webpackChunktextbook_source=self.webpackChunktextbook_source||[]).push([[8306],{7052:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"textbook/chapter_03/00-50","title":"Code and Mako","description":"We have already come across  in","source":"@site/docs/textbook/chapter_03/00-50.mdx","sourceDirName":"textbook/chapter_03","slug":"/textbook/chapter_03/00-50","permalink":"/textbook/docs/textbook/chapter_03/00-50","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Code and Mako"},"sidebar":"textbookSidebar","previous":{"title":"Code Blocks","permalink":"/textbook/docs/textbook/chapter_03/00-40"},"next":{"title":"Chapter 4. Logic and If Statements","permalink":"/textbook/docs/textbook/chapter_04/"}}');var o=n(4848),t=n(8453),i=n(1428);const r={title:"Code and Mako"},l=void 0,c={},d=[{value:"What is a Python Expression?",id:"what-is-a-python-expression",level:2},{value:"Mako and Python Expressions",id:"mako-and-python-expressions",level:2},{value:"Mako in Fields and Data Blocks",id:"mako-in-fields-and-data-blocks",level:2},{value:"Mako and Logic",id:"mako-and-logic",level:2}];function h(e){const s={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(s.p,{children:["We have already come across ",(0,o.jsx)(i.DisplayGlossaryItem,{item:"mako",upper:!0})," in\n",(0,o.jsx)(i.DisplayChapter,{chapter:"chapter_02"}),", where we used it to\n",(0,o.jsx)(s.a,{href:"/docs/textbook/chapter_02/00-42",children:"display the value of variables"}),".  In\n",(0,o.jsx)(i.DisplayChapter,{chapter:"chapter_04"})," we will see Mako used to\n",(0,o.jsx)(s.a,{href:"/docs/textbook/chapter_04/00-50",children:"embed decision-making logic"})," in our\n",(0,o.jsx)(i.DisplayGlossaryItem,{item:"questionblock",plural:!0}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["What we want to draw out in this part of the chapter is the relationship between Mako\nand ",(0,o.jsx)(i.DisplayGlossaryItem,{item:"python",upper:!0}),".  In short, we use Mako to embed\nPython expressions into the 'display' parts of our app, such as question blocks."]}),"\n",(0,o.jsx)(s.h2,{id:"what-is-a-python-expression",children:"What is a Python Expression?"}),"\n",(0,o.jsxs)(s.p,{children:["Python expressions are a ",(0,o.jsx)(s.a,{href:"https://docs.python.org/3/reference/expressions.html",children:"reasonably complex concept"}),".\nHowever, we will limit ourselves to just this definition:"]}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsx)(s.p,{children:"A Python expression is Python code that can be evaluated to a single value."}),"\n"]}),"\n",(0,o.jsxs)(s.p,{children:["For example, the Python expression ",(0,o.jsx)(s.code,{children:"1 + 1"})," evaluates to ",(0,o.jsx)(s.code,{children:"2"}),".  The expression ",(0,o.jsx)(s.code,{children:"MJFname"})," evaluates\nto whatever the value of ",(0,o.jsx)(s.code,{children:"MJFname"})," is.  The expression ",(0,o.jsx)(s.code,{children:"MJFfirstname + ' ' + MJFlastname"})," evaluates\nto a ",(0,o.jsx)(s.a,{href:"/docs/textbook/chapter_03/00-20#strings",children:"string"})," containing the valueof ",(0,o.jsx)(s.code,{children:"MJFfirstname"}),", then a space,\nthen the value of ",(0,o.jsx)(s.code,{children:"MJFlastname"})," all joined together."]}),"\n",(0,o.jsx)(s.p,{children:"The key to all of these is that evaluate to a single 'thing' or a single value."}),"\n",(0,o.jsx)(s.h2,{id:"mako-and-python-expressions",children:"Mako and Python Expressions"}),"\n",(0,o.jsxs)(s.p,{children:["Mako takes any Python expression and evaluates it.  By embedding our expression in the ",(0,o.jsx)(s.code,{children:"${...}"}),"\nenclosure we're telling Docassemble to fire up Mako for what's inside the braces, evaluate the\nexpression and then display the result."]}),"\n",(0,o.jsx)(s.p,{children:"We would call our above examples as follows:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yml",metastring:"showLineNumbers",children:"---\nquestion: Mako demonstrator\nsubquestion: |\n  What does 1 + 1 equal?  ${ 1 + 1 }\n\n  The value of `MJFname` is ${MJFname}\n\n  The full name is ${ MJFfirstname + ' ' + MJFlastname }\n---\n"})}),"\n",(0,o.jsxs)(s.admonition,{title:"Mako and spaces",type:"info",children:[(0,o.jsxs)(s.p,{children:["You may have noticed that in some of our expressions we space things out\n(eg: ",(0,o.jsx)(s.code,{children:"${ 1 + 1 }"})," instead of ",(0,o.jsx)(s.code,{children:"${1+1}"}),")."]}),(0,o.jsx)(s.p,{children:"Mako ignores spaces inside the braces, much like how Python also ignores\nspaces.  So, we can use spaces to, well, space things out (!) and make our\ncode easier to read."})]}),"\n",(0,o.jsx)(s.p,{children:"So, for example, this Mako:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"  ${MJFname}\n"})}),"\n",(0,o.jsx)(s.h2,{id:"mako-in-fields-and-data-blocks",children:"Mako in Fields and Data Blocks"}),"\n",(0,o.jsx)(s.p,{children:"We have already used Mako in question blocks, but Mako can be used in many other\nparts of Docassemble.  For example, it can be used in the question title:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yml",metastring:"showLineNumbers",children:"---\nquestion: Hello ${MJFname}\nsubquestion: |\n    This question block displays the value\n    of `MJFname` in its title.\n---\n"})}),"\n",(0,o.jsx)(s.p,{children:"It can also be used in fields:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yml",metastring:"showLineNumbers",children:"---\nquestion: Get last name\nfields:\n  - ${MJFfirstname}, what is your last name?: MJFlastname\n---\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Mako can also be used in the ",(0,o.jsx)(s.code,{children:"subject"})," key of ",(0,o.jsx)(s.a,{href:"/docs/recipes/templates",children:"template blocks"}),"."]}),"\n",(0,o.jsx)(s.p,{children:"By a long way we will use Mako  in question blocks, but it is worth keeping in mind that\nalmost any part of Docassemble that contains string literals can also utilise Mako."}),"\n",(0,o.jsx)(s.h2,{id:"mako-and-logic",children:"Mako and Logic"}),"\n",(0,o.jsx)(s.p,{children:"In addition to displaying Python expressions, Mako has a second syntax which serves a\nsecond function, namely logic."}),"\n",(0,o.jsxs)(s.p,{children:["We can use Mako to embed decision-making logic into our display text using the ",(0,o.jsx)(s.code,{children:"%"}),"\nsyntax.  This ",(0,o.jsx)(s.code,{children:"%"})," syntax applies only to two elements: ",(0,o.jsx)(s.code,{children:"%if"})," for\n",(0,o.jsx)(s.a,{href:"/docs/textbook/chapter_04/00-50",children:"if statements"})," and ",(0,o.jsx)(s.code,{children:"%for"})," for\n",(0,o.jsx)(s.a,{href:"/docs/textbook/chapter_05/00-30#python-format-and-mako-format",children:"iteration"}),"."]}),"\n",(0,o.jsxs)(s.p,{children:["We will cover if statements in more detail in ",(0,o.jsx)(i.DisplayChapter,{chapter:"chapter_03"}),"\nand iteration in ",(0,o.jsx)(i.DisplayChapter,{chapter:"chapter_05"}),"."]})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);
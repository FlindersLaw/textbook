"use strict";(self.webpackChunktextbook_source=self.webpackChunktextbook_source||[]).push([[2760],{462:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>f,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var n=s(4848),i=s(8453),o=s(2487);s(3797),s(9120);const r={title:"Coding - Introduction"},l=void 0,a={id:"textbook/chapter_06/filtering/00-20",title:"Coding - Introduction",description:"In this part of the Case Study we work through writing the code for the app we have",source:"@site/docs/textbook/chapter_06/filtering/00-20.mdx",sourceDirName:"textbook/chapter_06/filtering",slug:"/textbook/chapter_06/filtering/00-20",permalink:"/textbook/docs/textbook/chapter_06/filtering/00-20",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Coding - Introduction"},sidebar:"textbookSidebar",previous:{title:"Design",permalink:"/textbook/docs/textbook/chapter_06/filtering/00-10"},next:{title:"Coding - User questions",permalink:"/textbook/docs/textbook/chapter_06/filtering/00-30"}},d={},c=[{value:"Starting code",id:"starting-code",level:2}];function h(e){const t={code:"code",h2:"h2",mermaid:"mermaid",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"In this part of the Case Study we work through writing the code for the app we have\ndesigned.  Working code snippets will be included on this page.  You are encouraged\nto copy the code into your playground and 'code along' as the app is built out."}),"\n",(0,n.jsxs)(t.p,{children:["This project will ultimately consist of many different files.  There will be a ",(0,n.jsx)(t.code,{children:"main.yml"}),"\nwhich will contain the code the drives the app overall. We will put the questions into a\nseparate file and we'll also put the database into a separate file.  We'll also have a\nCSS file for our styling, image files for our logo and maybe other image resources.  In\naddition we may decide to break the decision-making part of the app into at least one\nbut possibly more separate files.  The idea is to compartmentalise each part of the code\nto make it easier to read."]}),"\n",(0,n.jsx)(t.p,{children:"We may end up having coding resources that look like this:"}),"\n",(0,n.jsx)(t.mermaid,{value:"flowchart RL\n    id0(<code>main.yml</code><br>This file drives the entire app)\n    id1(<code>questions.yml</code><br>Put the user quesetions here)\n    id2(<code>services.yml</code><br>Put <code>MJFservices</code> here)\n    id3(<code>styles.css</code><br>Contains styling to make our app look beautiful)\n    id4(Image resources, such as our logo in the <code>Static Files</code> folder)\n    id5(Template files to assist in creating our PDF<br>in the <code>Templates</code> folder)\n    id6(<code>process_data.yml</code><br>The decision-making logic will sit here)\n    id7(We may separate the logic to set the<br><code>_ok</code> variables into a separate file)\n\n    id1 --\x3e id0\n    id2 --\x3e id0\n    id3 --\x3e id0\n    id4 --\x3e id0\n    id5 --\x3e id0\n    id6 --\x3e id0\n\n    id7 --\x3e id6\n\n    %% Define styles for flowchart items.  We want to make comments yellow\n    %% and have a larger font size for regular items\n    classDef commentClass fill:#faffd6,text-align:left\n    classDef questionClass fill:#ffe6bc\n    classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n    classDef itemClass font-size:16pt\n    classDef leftListClass text-align:left"}),"\n",(0,n.jsx)(t.p,{children:"Each code snippet in this part will include the name of the file that contains the code."}),"\n",(0,n.jsx)(t.h2,{id:"starting-code",children:"Starting code"}),"\n",(0,n.jsx)(t.p,{children:"Let's start with our usual setup, that is a welcome screen, a mandatory block that drives our app and\na final screen to display the final output.  We can then build this out as we go."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yml",metastring:'title="main.yml" showLineNumbers',children:"---\nmandatory: True\nquestion: Welcome screen\nsubquestion: |\n  Welcome screen text will go here eventually.\nbuttons:\n  - Continue: continue\n  - Exit: exit\n  - Restart: restart\n---\n# This code block drives our app\nmandatory: True\ncode: |\n  final_screen\n---\n# This is our final screen\nevent: final_screen\nquestion: Final Scren\nsubquestion: |\n  Eventually the list of services will be displayed here\nbuttons:\n  - Exit: exit\n  - Restart: restart\n---\n"})}),"\n",(0,n.jsx)(t.p,{children:"Copy and paste this code into your Playground, Save and Run, and you will be presented with the start and end\nscreens."}),"\n",(0,n.jsx)(o.DisplayImage,{imageURL:"/img/textbook/chapter_06/filter/coding1.png"}),"\n",(0,n.jsx)(o.DisplayImage,{imageURL:"/img/textbook/chapter_06/filter/coding2.png"}),"\n",(0,n.jsx)(t.p,{children:"We can now work through generating the code in a similar order to which we conducted the design."})]})}function f(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},3797:(e,t,s)=>{s.r(t),s.d(t,{F01:()=>r,F02:()=>a,F03:()=>c,F03a:()=>f,F04:()=>u,F05:()=>p,F05a:()=>j,F05b:()=>y,F06:()=>v,F06a:()=>k,F06b:()=>F,F07:()=>_});var n=s(4848),i=s(8453);function o(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n    id1(Display a <b>list</b> of emergency<br>accommodation providers<br><b>tailored to</b> the <b>circumstances<br>of</b> each user)"})}function r(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}function l(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n    id0(Ask user about their circumstances)\n    id0 --\x3e id1(Evaluate user's circumstances against list of services)\n    id1 --\x3e id2(Display list of relevant services)"})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}function d(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n    id0(Ask user their age)\n    id1(Ask user their gender)\n    id2(Ask user for which locations<br>they are looking for services)\n    id3(Ask the user if they are<br>looking for accommodation for<br>themselves or their family)\n    \n    %% Invisible links so the boxes appear vertically\n    id0 ~~~ id1 ~~~ id2 ~~~ id3"})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}function h(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n    id0(Ask user their age)\n    id1(Ask user their gender)\n    id2(Ask user for which locations<br>they are looking for services)\n    id3(Ask the user if they are<br>looking for accommodation for<br>themselves or their family)\n\n    co0(Name: <code>MJFage</code><br><code>datatype: integer</code>)\n    co1(Name: <code>MJFgender</code><br>Present genders as radio buttons)\n    co2(Name: <code>MJFlocation</code><br>Use checkboxes so<br>user can select<br>multiple locations)\n    co3(Name: <code>MJFfamily</code><br>Use <code>yesnoradio</code> or regular radio buttons)\n\n    \n    %% Invisible links so the boxes appear vertically\n    id0 ~~~ id1 ~~~ id2 ~~~ id3\n\n    co0 --\x3e id0\n    co1 --\x3e id1\n    co2 --\x3e id2\n    co3 --\x3e id3\n\n\n    %% Define styles for flowchart items.  We want to make comments yellow\n    %% and have a larger font size for regular items\n    classDef commentClass fill:#faffd6,text-align:left\n    classDef questionClass fill:#ffe6bc\n    classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n    classDef itemClass font-size:16pt\n    classDef leftListClass text-align:left\n\n    class co0,co1,co2,co3 commentClass\n"})}function f(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}function m(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n    id0(Define a list of services)\n    id1(Evaluate user circumstances<br>against service criteria)\n\n    %% invisible links to stack vertically\n    id0 ~~~ id1"})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}function x(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n  id1(For each service in the list)\n  id1 --\x3e id2{{Does the service meet the user's circumstances?}}\n  id2 -- Yes --\x3e id3(Add the service to the display list)\n  id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(x,{...e})}):x(e)}function g(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n  subgraph Loop\n    direction TB\n    id1(For each service in the list)\n    subgraph Loop_Body\n        direction TB\n        id2{{Does the service meet the user's circumstances?}}\n        id2 -- Yes --\x3e id3(Add the service to the display list)\n        id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n    end\n    id1 --\x3e Loop_Body\n  end\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function j(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(g,{...e})}):g(e)}function b(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n  subgraph Loop\n    direction TB\n    id1(<code>for a_service in MJFservices:</code>)\n    subgraph Loop_Body\n        direction TB\n        id2{{Does the service meet the user's circumstances?}}\n        id2 -- Yes --\x3e id3(Add the service to the display list)\n        id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n    end\n    id1 --\x3e Loop_Body\n  end\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function y(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(b,{...e})}):b(e)}function w(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n  subgraph Loop_Body\n      direction TB\n      id2{{Does the service meet the user's circumstances?}}\n      id2 -- Yes --\x3e id3(Add the service to the display list)\n      id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n  end\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function v(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(w,{...e})}):w(e)}function D(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n  id1{{Is <code>MJFage</code> between the minimum and maximum age for <code>a_service</code>?}}\n  id2{{Is <code>MJFgender</code> one of the genders listed for <code>a_service</code>?}}\n  id3{{Do any of the locations in <code>MJFlocation</code> match<br>up with the list of locations in <code>a_service</code>?}}\n  id4{{Does <code>MJFfamily</code> match up with any of the<br>family list items in <code>a_service</code>?}}\n\n  id5{{Is the answer 'Yes' to all of the above questions?}}\n  id5 -- Yes --\x3e id6(Add the service to the display list)\n  id5 -- No --\x3e id7(Do not add the service<br>to the display list)\n\n  id1 ~~~ id2 ~~~ id3 ~~~ id4 ~~~ id5\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id1,id2,id3,id4,id5 questionClass"})}function k(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(D,{...e})}):D(e)}function C(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n  id1(Ask the age question and store the result in <code>MJFage_ok</code>)\n  id2(Ask the gender question and store the result in <code>MJFgender_ok</code>)\n  id3(Ask the location question and store the result in <code>MJFlocation_ok</code>)\n  id4(Ask the age question and store the result in <code>MJFage_ok</code>)\n\n  id5{{Is each of <code>MJFage_ok</code>, <code>MJFgender_OK</code>, <code>MJFlocation_ok</code> and <code>MJFfamily_ok</code> equal to <code>True</code>?}}\n  id5 -- Yes --\x3e id6(Add the service to the display list)\n  id5 -- No --\x3e id7(Do not add the service<br>to the display list)\n\n  id1 ~~~ id2 ~~~ id3 ~~~ id4 ~~~ id5\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id1,id2,id3,id4,id5 questionClass"})}function F(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(C,{...e})}):C(e)}function T(e){const t={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,n.jsx)(t.mermaid,{value:"flowchart TD\n  id0(for each location selected by the user)\n  id0 --\x3e id1{{\"Is the location in <code>a_service['location']</code>?\"}}\n  id1 -- Yes --\x3e id2(Set <code>MJFlocation_ok</code> to <code>True</code>)\n  id1 -- No --\x3e id3(Set <code>MJFlocation_ok</code> to <code>False</code><br>but only if it hasn't already been set to <code>True</code>)\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id1 questionClass"})}function _(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(T,{...e})}):T(e)}},9120:(e,t,s)=>{s.r(t),s.d(t,{MappingTable:()=>a,ServiceTable:()=>r});var n=s(4848),i=s(8453);function o(e){const t={a:"a",...(0,i.R)(),...e.components};return(0,n.jsxs)("table",{className:"complexDataTableExamples",children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{children:"Name"}),(0,n.jsx)("th",{children:"Website"}),(0,n.jsx)("th",{children:"Age limits"}),(0,n.jsx)("th",{children:"Genders"}),(0,n.jsx)("th",{children:"Locations"}),(0,n.jsx)("th",{children:"Family or Single"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"ABC Services"}),(0,n.jsx)("td",{children:(0,n.jsx)(t.a,{href:"https://abcsvc.org.au",children:"https://abcsvc.org.au"})}),(0,n.jsx)("td",{children:"18 - 65"}),(0,n.jsx)("td",{children:"Male, Female"}),(0,n.jsx)("td",{children:"North, East"}),(0,n.jsx)("td",{children:"Families, Singles"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"WH Youth"}),(0,n.jsx)("td",{children:(0,n.jsx)(t.a,{href:"https://whyouth.org.au",children:"https://whyouth.org.au"})}),(0,n.jsx)("td",{children:"12 - 17"}),(0,n.jsx)("td",{children:"Male, Female"}),(0,n.jsx)("td",{children:"South"}),(0,n.jsx)("td",{children:"Singles"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"St Mary's Shelter"}),(0,n.jsx)("td",{children:(0,n.jsx)(t.a,{href:"https://stmarys.org.au",children:"https://stmarys.org.au"})}),(0,n.jsx)("td",{children:"12 and over"}),(0,n.jsx)("td",{children:"Female"}),(0,n.jsx)("td",{children:"North"}),(0,n.jsx)("td",{children:"Singles"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"MHI Men's Health"}),(0,n.jsx)("td",{children:(0,n.jsx)(t.a,{href:"https://mhimh.org.au",children:"https://mhimh.org.au"})}),(0,n.jsx)("td",{children:"18 and over"}),(0,n.jsx)("td",{children:"Male"}),(0,n.jsx)("td",{children:"North, West"}),(0,n.jsx)("td",{children:"Singles"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"DE Family Shelter"}),(0,n.jsx)("td",{children:(0,n.jsx)(t.a,{href:"https://defsupport.org.au",children:"https://defsupport.org.au"})}),(0,n.jsx)("td",{children:"18 - 65"}),(0,n.jsx)("td",{children:"Male, Female"}),(0,n.jsx)("td",{children:"North, East, West, South"}),(0,n.jsx)("td",{children:"Families"})]})]})}function r(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}function l(e){const t={p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)("table",{className:"complexDataTableExamples",children:[(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{children:"Column Name"}),(0,n.jsx)("th",{children:"Key Name"}),(0,n.jsx)("th",{children:"Data type"}),(0,n.jsx)("th",{children:"Comments"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"Name"}),(0,n.jsx)("td",{children:(0,n.jsx)("code",{children:"name"})}),(0,n.jsx)("td",{children:"String"}),(0,n.jsx)("td",{colspan:"2",children:"These first two keys store simple string data types"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"Website"}),(0,n.jsx)("td",{children:(0,n.jsx)("code",{children:"website"})}),(0,n.jsx)("td",{children:"String"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"Age limits"}),(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"min_age"})," and ",(0,n.jsx)("code",{children:"max_age"})]}),(0,n.jsx)("td",{children:"Integer"}),(0,n.jsx)("td",{children:(0,n.jsx)(t.p,{children:"It's easier for us to split out the age limit into minimum and\nmaximum age variables and test that the user's age falls inside\nthe min and max ages. We will need additional code to cope with\nthe 'and over' requirements in some of the data.  We will deal\nwith this when we code the age test."})})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"Genders"}),(0,n.jsx)("td",{children:(0,n.jsx)("code",{children:"gender"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)(t.p,{children:"A list of strings representing genders.  At a minimum we should\nhave"}),(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Female"}),(0,n.jsx)("li",{children:"Male"}),(0,n.jsx)("li",{children:"Other"})]}),(0,n.jsx)(t.p,{children:"This will be driven by the data given to us by ABC."})]}),(0,n.jsx)("td",{children:(0,n.jsx)(t.p,{children:"A user will only be allowed to select one gender as a response."})})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"Locations"}),(0,n.jsx)("td",{children:(0,n.jsx)("code",{children:"location"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)(t.p,{children:"A list of locations."}),(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"North"}),(0,n.jsx)("li",{children:"South"}),(0,n.jsx)("li",{children:"East"}),(0,n.jsx)("li",{children:"West"})]})]}),(0,n.jsx)("td",{children:"It appears from the ABC data that this is suitable for their purposes"})]}),(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"Family or Single"}),(0,n.jsx)("td",{children:(0,n.jsx)("code",{children:"family"})}),(0,n.jsxs)("td",{children:[(0,n.jsx)(t.p,{children:"A list consisting of one or all of"}),(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:"Family"}),(0,n.jsx)("li",{children:"Single"})]})]}),(0,n.jsx)("td",{children:(0,n.jsx)(t.p,{children:"Agencies that cater for all clients (ie: those looking for\naccommodation for themselves and those looking for accommodation\nfor themselves and their family) should have both items in their\ndata entry.  Otherwise, the appropriate list item is specified\nie: the data type will be a list containing one item."})})]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);
"use strict";(self.webpackChunktextbook_source=self.webpackChunktextbook_source||[]).push([[4232],{8980:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"coding_exercises/coding_3_exercise/index","title":"Coding 3 Exercise Instructions","description":"The Exercise","source":"@site/docs/coding_exercises/30_coding_3_exercise/index.mdx","sourceDirName":"coding_exercises/30_coding_3_exercise","slug":"/coding_exercises/coding_3_exercise/","permalink":"/textbook/docs/coding_exercises/coding_3_exercise/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Coding 3 Exercise Instructions"},"sidebar":"codingExercisesSidebar","previous":{"title":"Coding 2 Exercise Instructions","permalink":"/textbook/docs/coding_exercises/coding_2_exercise/"},"next":{"title":"Section 52 Calculator Chart","permalink":"/textbook/docs/coding_exercises/coding_3_exercise/s52_calculator_chart"}}');var i=s(4848),a=s(8453),o=s(1428);s(8958),s(9348);const c={title:"Coding 3 Exercise Instructions"},l=void 0,r={},d=[{value:"The Exercise",id:"the-exercise",level:2},{value:"Adding the calculations",id:"adding-the-calculations",level:3},{value:"Displaying the calculations",id:"displaying-the-calculations",level:3},{value:"Solution Code",id:"solution-code",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"the-exercise",children:"The Exercise"}),"\n",(0,i.jsxs)(n.p,{children:["In this exercise you will build a Section ",(0,i.jsx)(n.strong,{children:"52"})," Calculator App. The app will be based on the\n",(0,i.jsx)(n.a,{href:"/textbook/docs/coding_exercises/coding_3_exercise/s52_calculator_chart",children:"flowchart"})," and ",(0,i.jsx)(n.a,{href:"/textbook/docs/coding_exercises/coding_3_exercise/s52_calculator_screens",children:"screens"})," that appear as the resources for this exercise."]}),"\n",(0,i.jsx)(n.p,{children:"Unlike the last two weeks you will not be provided with step-by-step instructions. The principles for this Section 52 app are more or less identical to the Section 58 app. The difference in the Section 52 app is the calculations are a bit more complex."}),"\n",(0,i.jsx)(n.p,{children:"Consequently, we anticipate you'll use the same approach to develop this Section 52 app ie:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Make the first mandatory question block"}),"\n",(0,i.jsx)(n.li,{children:"Make an empty mandatory code block"}),"\n",(0,i.jsxs)(n.li,{children:["Make the rest of the question blocks","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"follow the instruction in each screen. There are instructions on setting out the questions and the datatypes"}),"\n",(0,i.jsx)(n.li,{children:"update the code block to call them as you go"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Make ",(0,i.jsx)(n.em,{children:"End Screen 1"})," and add it to your code block"]}),"\n",(0,i.jsxs)(n.li,{children:["Add if statements so the user is exited to ",(0,i.jsx)(n.em,{children:"Exit Screen 1"})," and ",(0,i.jsx)(n.em,{children:"Exit Screen 2"})]}),"\n",(0,i.jsxs)(n.li,{children:["Add an if statement for the 'Year of injury' decision. Make both the true branch and false branch to go ",(0,i.jsx)(n.em,{children:"End Screen 1"})]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Before you jump into things, you'll see that this app contains more screens, more decisions (and more maths!) than the previous app. You might want to consider using ",(0,i.jsxs)(n.a,{href:"/docs/recipes/structuring_code",children:[(0,i.jsx)(n.code,{children:"include"})," blocks"]})," to split your code into multiple files to make it more manageable."]})}),"\n",(0,i.jsx)(n.h3,{id:"adding-the-calculations",children:"Adding the calculations"}),"\n",(0,i.jsx)(n.p,{children:"If you wish you can attempt to add the calculations yourself. However, we anticipate you might struggle as we haven't taught you how to implement lookup tables in Docassemble.  Nonetheless, you're welcome to try!"}),"\n",(0,i.jsxs)(n.p,{children:["For those of you less adventurous, we have created a file called ",(0,i.jsx)(n.code,{children:"s52calculator_maths.yml"})," for you. It contains all the mathematical calculations. All the maths are based only on two variables: `"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MJFyearofinjury"})," which contains only the year (ie: 2002, 2024 etc) the user was injured; and"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MJFscalevalue"})," - which contains the s 52(2)(a) scale value."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You can insert our example code and change all references to these two variables to whatever variable names you have chosen.  The calculations should then work."}),"\n",(0,i.jsx)(n.h3,{id:"displaying-the-calculations",children:"Displaying the calculations"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"End Screen 1"})," contains placeholders called ",(0,i.jsx)(n.code,{children:"[insert unadjusted damages]"})," and ",(0,i.jsx)(n.code,{children:"[insert adjusted damages]"}),". This is where you're meant to insert your unadjusted and adjusted damages."]}),"\n",(0,i.jsxs)(n.p,{children:["To do this you should use use ",(0,i.jsx)(o.DisplayGlossaryItem,{item:"mako"})," and the ",(0,i.jsx)(n.code,{children:"currency()"})," function. Check out the ",(0,i.jsx)(o.DisplayChapter,{chapter:"chapter_02",pinpoint:"00-60",text:"Vital Statistics"})," example in this textbook. You may also want to review the ",(0,i.jsx)(n.a,{href:"coding_1_prerequisites#watch-the-videos",children:"C1.06 video"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"solution-code",children:"Solution Code"}),"\n",(0,i.jsxs)(n.p,{children:["This code adopts the ",(0,i.jsx)(n.a,{href:"/docs/recipes/structuring_code",children:"code structuring"})," discussed above. Namely, the solution code is split into multiple files.  We do this because a single file with hundreds of lines of code can become unwieldy to manage. Also, the use of multiple files allows us to organise our code logically."]}),"\n",(0,i.jsxs)(n.p,{children:["In this example we've decided to put the main code logic and the exit and end screens in ",(0,i.jsx)(n.code,{children:"main.yml"}),". We have then created a separate file for the questions (",(0,i.jsx)(n.code,{children:"s52calculator_questions.yml"}),") and another file for the math calculations (",(0,i.jsx)(n.code,{children:"s52calculator_maths.yml"}),")"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"main.yml"})})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",metastring:"showLineNumbers",children:"# Model code for Section 52 non-economic loss calculator\n---\n# Include the other files that make up this app\ninclude:\n  - s52calculator_questions.yml\n  - s52calculator_maths.yml\n---\nmandatory: True\nquestion: Welcome\nsubquestion: |\n  This application will help you to calculate damages for non-economic loss\n  according to section 52 of the *Civil Liability Act 1936* (SA)\nbuttons:\n  - Continue: continue\n  - Exit: exit\n---\n# Drives the app\nmandatory: True\ncode: |\n  # We have to meet extent of impairment OR expenses threshold\n  if MJFimpairment or MJFexpenses:\n    if MJFmva:\n      # Exit if injurries arise from MVA\n      MJFexit02\n    else:\n      # We can just display the end screen here.\n      # Docassemble will take care of the rest\n      MJFend01\n  else:\n    MJFexit01\n---\n#\n# Exit and end screens are in this file. \n# All the other questions screens are in s52calculator_questions.yml\n#\n---\n# Exit screen 1\nevent: MJFexit01\nquestion: Ineligible\nsubquestion: |\n  You cannot claim damages for non-economic loss as your medical\n  expenses do not exceed the prescribed minimum.\nbuttons:\n  - Exit: exit\n  - Restart: restart\n---\n# Exit Screen 2\nevent: MJFexit02\nquestion: Motor Vehicle Accident\nsubquestion: |\n  Sorry, this calculator only calculates damages for non-economic loss for people\n  who have suffered an injury **not** arising from a motor vehicle accident.\n\n  You may still be able to claim damages for non-economic loss. Please seek legal advice.\nbuttons:\n  - Exit: exit\n  - Restart: restart\n---\n# End screen\nevent: MJFend01\nquestion: Damages Calculation\nsubquestion: |\n  Your unadjusted damages has been calculated to be **${currency(MJFunadjusted_damages)}**.\n\n  After adjustment for CPI your damages for non-economic loss have been\n  calculated to be **${currency(MJFadjusted_damages)}**.\n---\n"})})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"s52calculator_questions.yml"})})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",metastring:"showLineNumbers",children:"# I've separated all the question screens into this\n# file to make the code more readable\n---\n# Screen 2\nquestion: Extent of impairment\nsubquestion: |\n  Did the injury you sustained cause you to be impaired from leading your normal\n  life for seven (7) days or more?\nfields:\n  - no label: MJFimpairment\n    datatype: yesnoradio\n---\n# Screen 3\nquestion: Medical Expenses\nsubquestion: |\n  Do the medical expenses you incurred exceed the prescribed minimum set out\n  in section 52(1)(b)?\nfields:\n  - no label: MJFexpenses\n    datatype: yesnoradio\n---\n# Screen 4\nquestion: Motor Vehicle Accident\nsubquestion: |\n  Were your injuries caused by a motor vehicle accident?\nfields:\n  - no label: MJFmva\n    datatype: yesnoradio\n---\n# Screen 5\nquestion: Year of Injury\nsubquestion: |\n  In what year did your injury occur?\n\n  **Note:** this calculator works only for injuries sustained\n  between 2002 and 2025.\nfields:\n  - Year of injury: MJFyearofinjury\n    datatype: integer\n    min: 2002\n    max: 2025\n---\n# Screen 6\nquestion: Scale value\nsubquestion: |\n  Please enter the scale value.\n\n  The scale value must be between 0 and 60 and can be a whole number only\nfields:\n  - Scale value: MJFscalevalue\n    datatype: integer\n    min: 0\n    max: 60\n---\n"})})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"s52calculator_maths.yml"})})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"# This contains the code blocks that perform the calculations\n---\n# This is the CPI table. It comes from ABS data. Refer to LLAW3337 teaching\n# materials for more information\ncode: |\n  MJFcpi_table = {\n    2002 : 76.4,\n    2003 : 79.2,\n    2004 : 81.2,\n    2005 : 83.6,\n    2006 : 86.8,\n    2007 : 88.0,\n    2008 : 92.5,\n    2009 : 93.7,\n    2010 : 96.2,\n    2011 : 100.0,\n    2012 : 101.7,\n    2013 : 103.7,\n    2014 : 105.9,\n    2015 : 107.1,\n    2016 : 108.4,\n    2017 : 110.4,\n    2018 : 112.4,\n    2019 : 114.5,\n    2020 : 115.7,\n    2021 : 118.6,\n    2022 : 128.6,\n    2023 : 136.2,\n    2024 : 140.6,\n  }\n---\n# Scale multiplier table. We base this on\n# The index is based on the scale minimum value.\n# The tuple contains the base first and then the multiplier\ncode: |\n  MJFmultiplier_table = {\n    0 : (0,1150),\n    10 : (11500,2300),\n    20 : (34500,3450),\n    30 : (69000,4600),\n    40 : (115000,5750),\n    50 : (127500,6900)\n  }\n---\n# This is the multiplier for injuries sustained in 2002\ncode: |\n  MJF2002multiplier = 1710\n---\n# Calculates the scale minimum value \n# We do this by rounding down to the nearest 10\ncode: |\n  MJFscale_min = round(MJFscalevalue // 10) * 10\n---\n# Now we can calculate the remainder as it's the scale value - the min value\ncode: |\n  MJFscale_remainder = MJFscalevalue - MJFscale_min\n---\n# Calculate the previous year\ncode: |\n  MJFpreviousyear = MJFyearofinjury - 1\n---\n# Calculate post-2002 damages\n# This is the base value plus the remainder multiplied by the multiplier\n# Our cacluations don't work if the value is 60, so we need to calculate this\n# explicitly here\ncode: |\n  if MJFscalevalue == 60:\n    # Special calculations for 60\n    base_value, multiplier = MJFmultiplier_table[50]\n    MJFpost2002damages = base_value + (multiplier * 10)\n  else:\n    # Otherwise we use regular calcs\n    base_value, multiplier = MJFmultiplier_table[MJFscale_min]\n    MJFpost2002damages = base_value + ( MJFscale_remainder * multiplier)\n---\n# Now we calculate the unadjusted amount. We account here\n# for 2002 and post-2002 rules\ncode: |\n  if MJFyearofinjury == 2002:\n    MJFunadjusted_damages = MJFscalevalue * MJF2002multiplier;\n  else:\n    MJFunadjusted_damages = MJFpost2002damages\n---\n# We need to adjust for CPI\n# For 2002 and 2003 we don't need to adjust at all.\n# For the others we calculate\ncode: |\n  if MJFyearofinjury <= 2003:\n    MJFadjusted_damages = MJFunadjusted_damages\n  else:\n    cpi_adjustment = MJFcpi_table[MJFpreviousyear] / MJFcpi_table[2002]\n    MJFadjusted_damages = MJFunadjusted_damages * cpi_adjustment\n---\n"})})]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},9348:(e,n,s)=>{s.r(n),s.d(n,{ChapterVideoTable:()=>c,Section52CalculatorChart:()=>m,Section52CalculatorScreens:()=>x,Section58CalculatorChart:()=>r,Section58CalculatorScreens:()=>u});var t=s(4848),i=s(8453),a=s(1428);function o(e){const n={admonition:"admonition",p:"p",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)("table",{className:"complexDataTableExamples",children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:"Part of Chapter 2"}),(0,t.jsx)("th",{children:"Corresponding Video"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(a.DisplayChapter,{chapter:"chapter_02",pinpoint:"00-10",text:"Hello World"})}),(0,t.jsx)("td",{children:"C1.01"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(a.DisplayChapter,{chapter:"chapter_02",pinpoint:"00-15",text:"Docassemble Syntax"})}),(0,t.jsx)("td",{children:"No specific video. But syntax is covered to some degree in all the videos"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(a.DisplayChapter,{chapter:"chapter_02",pinpoint:"00-20",text:"Hello World 2 - Introducing Markdown and Mako"})}),(0,t.jsx)("td",{children:"C1.02"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(a.DisplayChapter,{chapter:"chapter_02",pinpoint:"00-30",text:"Hello World 3 - Buttons and More Markdown"})}),(0,t.jsx)("td",{children:"C1.03"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(a.DisplayChapter,{chapter:"chapter_02",pinpoint:"00-40",text:"Hello World 4 - More Mako, Multiple Questions, Tables"})}),(0,t.jsx)("td",{children:(0,t.jsx)(n.p,{children:"C1.04"})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:(0,t.jsx)(a.DisplayChapter,{chapter:"chapter_02",pinpoint:"00-60",text:"Vital Statistics - A More Sophisticated Example"})}),(0,t.jsx)("td",{children:"C1.06"})]})]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"The first two minutes of C1.04 deal with GitHub. We are not using GitHub in this topic, so ignore this part."})})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}function l(e){const n={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,t.jsx)(n.mermaid,{value:'flowchart TD\n    start01("Start<br>(Screen 1)")\n    start01 --\x3e q01{{"Were services gratuitous?<br>(Screen 2)"}}\n    q01 -- No --\x3e exit01("Not Eligile<br>(Screen 3)")\n    q01 -- Yes --\x3e q02{{"Who provided services?<br>(Screen 4)"}}\n    q02 -- Parent --\x3e q03{{"Amount claimed<br>(Screen 6)"}}\n    q02 -- Spouse --\x3e q03\n    q02 -- Domestic Partner ---\x3e q03\n    q02 -- Child --\x3e q03\n    q02 -- Someone Else --\x3e exit02("Not Eligible<br>(Screen 5)")\n    q03 -- More than four times<br>weekly earnings ---\x3e exit03("Not Eligible<br>(Screen 7)")\n    q03 -- Less than four times<br>weekly earnings ---\x3eend01("Eligible<br>(Screen 8)")\n\n    classDef startEndClass fill:#dddddd\n    classDef exitClass fill:#f0a25d\n    classDef okClass fill:#b1f6c2\n    classDef questionClass fill: #f3edd1,stroke: #000,color:blue\n    classDef commentClass fill: #f5fba8,font-size: 0.8em\n\n    class start01 startEndClass\n    class end01 okClass\n    class q01,q02,q03,q04 questionClass\n    class co00,co01,co02,co03,co04,co05,co06,co99 commentClass\n    class exit01,exit02,exit03 exitClass'})}function r(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}function d(e){const n={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,t.jsx)(n.mermaid,{value:'flowchart LR\n    co01("Screen 1\n        <b>Welcome</b><p>\n        Welcome to the Gratuitous Services Calculator App.<br>This app helps you to work out if you can claim for<br>gratuitous services provided to you<br>by your family when you were injured.\n\n        Gratuitous services are services that are<br>provided to you for free.\n\n        This calculator is based on section 58 of<br>the <i>Civil Liability Act (1936)</i> SA</p><hr><i>Add Continue and Exit buttons</i>")\n\n    co02("Screen 2\n        <b>Gratuitous Services</b>\n        Did you receive gratuitous services while\n        you were injured?\n        \n        Gratuitous services are services, such as\n        cleaning or caring provided to you at no cost.\n        <hr><i>Use a </i><code>radio</code><i> datatype to collect\n        responses. Store responses as True/False\n        Text for true response should be </i>\n        <b>I received services and I did not pay for any of them</b><i>\n        Text for false response should be </i>\n        <b>I received services but I did pay for them</b>")\n    co03("Screen 3\n        <b>Not Eligible</b>\n        According to the <i>Civil Liability Act</i> you cannot claim for\n        the services you incurred as they were not provided on\n        a gratuitous basis</p><hr><i>Exit and Restart buttons for all end screens</i>")\n    co04("Screen 4\n        <b>Provision of Services</b>\n        <p>Who provided the gratuitous services to you?</p><hr><p><i>Add choices from flowchart as radio buttons</i></p>")\n\n    co05("Screen 5\n        <b>Not Eligible</b>\n        You can only be compensated if the person<br> who provided the gratuitous services was your<br> parent, spouse, domestic partner or child<hr>\n        <i>Exit and Restart buttons for all end screens</i>")\n\n    co06("Screen 6\n        <b>Amount Claimed</b>\n        <p>What amount of damages are you claiming\n        for the provision of gratuitous services to\n        you while you were injured?\n        <hr><p><i>Provide a single input and ensure that\n        only currency data is accepted</i></p>")\n\n    co07("Screen 7\n        <b>Not Eligible</b>\n        Your claim must be limited to four times\n        State average weekly earnings.\n        State Average weekly earnings are\n        currently $[insert current earnings].\n        <hr><i>Exit and Restart buttons for all\n        end screens</i>")\n\n    co08("Screen 8\n        <b>You May be Eligible</b>\n        <p>According to section 58 of the <i>Civil\n        Liability Act</i> you may be able to claim for\n        gratuitous services\n        <hr><i>Exit and Restart buttons for all\n        end screens</i>")                                \n    \n    %% Lay the screens out in two columns\n    co01 ~~~ co02\n    co03 ~~~ co04\n    co05 ~~~ co06\n    co07 ~~~ co08\n\n    %% Styles I use for all flowcharts.\n    classDef startEndClass fill:#f4f3fd\n    classDef exitClass fill:#f0a25d\n    classDef okClass fill:#b1f6c2\n    classDef questionClass fill: #f3edd1,stroke: #000,color:blue\n    classDef commentClass fill: #f5fba8\n\n    class co00,co01,co02,co03,co04,co05,co06,co07,co08 commentClass'})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}function h(e){const n={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,t.jsx)(n.mermaid,{value:'flowchart TD\n    start("Start\n        (Screen 1)")\n    start --\x3e q01{{"Impact of injury\n        (Screen 2)"}}\n    q01 -- No --\x3e q02{{"Medical expenses of\n        (Screen 3)"}}\n    q02 -- No --\x3e exit01("s 52(1) ineligible\n        (Exit Screen 1)")\n\n    q01 -- Yes --\x3e q03{{"Do damages arise from MVA?\n        (Screen 4)"}}\n    q02 -- Yes --\x3e q03\n\n    q03 -- Yes --\x3e exit02("s 52(2) ineligible\n        (Exit Screen 2)")\n    q03 -- No --\x3e q04{{"Year of injury\n        (Screen 5)"}}\n    q04 -- 2002 --\x3e calc01("s 52(2)(b) scale multiplier is $1,710")\n    calc01 --\x3e ac03("Multiply scale value by multiplier\n        s 52(2)(b)")\n    q04 -- 2003 and later --\x3e calcChart("Refer to the<br><b>Base and Multiplier</b> chart")\n\n\n    calcChart --\x3e calc02("Add to base the amount\n        of scale value that exceeds\n        minimum by multiplier: s52(2)(c)")\n    %% sv01 --\x3e calc02("Add to base the mount of scale value that exceeds minimum by multiplier (s52(2)(c))")\n    %% sv02 --\x3e calc02\n    %% sv03 --\x3e calc02\n    %% sv04 --\x3e calc02\n    %% sv05 --\x3e calc02\n    %% sv06 --\x3e calc02\n\n    calc02 --\x3e calc03("Adjust calculated value for CPI\n        s 52(2)(d)")\n    calc03 --\x3e ok01("Damages calculation complete\n        (End Screen 1)")\n    ac03 --\x3e ok01\n\n    ok01 --\x3e end01(End)\n\n    end01 ~~~ calc\n\n\n\n    %% Post-2002 calculations\n    subgraph calc [Base and Multiplier Chart]\n    direction LR\n    %% q04 -- 2003 and later --\x3e q05{{"What s 52(2)(a) scale value assigned?"}}\n    q05{{"What is scale value?\n        (Screen 6)"}}\n    q05 -- 10 or less --\x3esv01("Scale value is $0. Multiplier is $1,150\n        s 52(2)(c)(i)")\n    q05 -- between 10 and 20 --\x3e sv02("Scale base is $11,500. Multiplier is $2,300\n        s 52(2)(c)(ii)")\n    q05 -- between 20 and 30 --\x3e sv03("Scale base is $34,500. Multiplier is $3,450\n        s 52(2)(c)(iii)")\n    q05 -- between 30 and 40 --\x3e sv04("Scale base is $69,000. Multiplier is $4,600\n        s 52(2)(c)(iv)")\n    q05 -- between 40 and 50 --\x3e sv05("Scale base is $115,000. Multiplier is $5,750\n        s 52(2)(c)(v)")\n    q05 -- between 50 and 60 --\x3e sv06("Scale value is $175,500. Multiplier is $6,900\n        s 52(2)(c)(vi)")\n    end\n\n    classDef startEndClass fill: #dddddd\n    classDef exitClass fill: #f0a25d\n    classDef okClass fill: #b1f6c2\n    classDef questionClass fill: #f3edd1,stroke: #000,color:blue\n    classDef commentClass fill: #f5fba8\n    classDef calcClass fill: #f9bcc3\n\n    class start,end01 startEndClass\n    class q01,q02,q03,q04,q05,q06 questionClass\n    class exit01,exit02,exit03,exit04 exitClass\n    class calc01,sv01,sv02,sv03,sv04,sv05,sv06,calcChart calcClass\n    class ok01 okClass\n'})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}function p(e){const n={mermaid:"mermaid",...(0,i.R)(),...e.components};return(0,t.jsx)(n.mermaid,{value:'flowchart TD\n    screen01("Screen 1\n        <b>Welcome</b>\n        \n        This application will help you to\n        calculate damages for non-economic loss\n        according to section 52 of the\n        *Civil Liability Act 1936* (SA)")\n\n    screen02("Screen 2\n        <b>Extent of Impairment</b>\n        \n        Did the injury you sustained cause you\n        to be impaired from leading your normal\n        life for seven (7) days or more?")\n\n    screen03("Screen 3\n        <b>Medical Expenses</b>\n        \n        Do the medical expenses you incurred\n        exceed the prescribed minimum set out\n        in section 52(1)(b)?")\n\n    screen04("Screen 4\n        <b>Motor Vehicle Accident</b>\n        \n        Were your injuries caused by a\n        motor vehicle accident?")\n\n    screen05("Screen 5\n        <b>Year of injury</b>\n        \n        In what year did your injury occur?\n\n        **Note:** this calculator works only for\n        injuries sustained between 2002 and 2025.\n        <hr><i>Data type should be </i><code>integer</code><i> and\n        restrict values to between 2002 and 2025</i>")\n\n    screen06("Screen 6\n        <b>Scale Value</b>\n        \n        Please enter the scale value.\n\n        The scale value must be between 0 and 60 and can\n        be a whole number only.\n        <hr><i>Data type should be </i><code>integer</code><i>.\n        Min value should be 0 and max should be 60")\n\n    exit01("Exit Screen 1\n        <b>Ineligible</b>\n        \n        You cannot claim damages for non-economic loss\n        as your medical expenses do not exceed the\n        prescribed minimum and the impact of your injury on \n        you is less than seven days.")\n\n    exit02("Exit Screen 2\n        <b>Motor Vehicle Accident</b>\n\n        Sorry, this calculator only calculates\n        damages for non-economic loss for people\n        who have suffered an injury **not** arising\n        from a motor vehicle accident. \n\n        You may still be able to claim damages for\n        non-economic loss. Please seek legal advice.")\n\n    ok01("End Screen 1\n        <b>Damages Calculation</b>\n        \n        Your unadjusted damages has been calculated\n        to be <b>[insert unadjusted damages]</b>\n        \n        After adjustment for CPI your damages for\n        non-economic loss have been calculated to be\n        <b>[insert adjusted damages]</b>")\n\n    screen01 ~~~ screen02 ~~~ screen03 ~~~ screen04 ~~~ screen05 ~~~ screen06\n    exit01 ~~~ exit02 ~~~ ok01\n\n    \n\n\n\n    classDef startEndClass fill: #dddddd\n    classDef exitClass fill: #f0a25d,text-align:left\n    classDef okClass fill: #b1f6c2,text-align:left\n    classDef questionClass fill: #f3edd1,stroke: #000,color:blue\n    classDef commentClass fill: #f5fba8,text-align:left\n    classDef calcClass fill: #f9bcc3\n\n    class screen01,screen02,screen03,screen04,screen05,screen06,screen07,screen08,screen09,screen10 commentClass\n    class exit01,exit02,exit03,exit04,exit05,exit06 exitClass\n    class ok01,ok02,ok03,ok04,ok05 okClass'})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}}}]);
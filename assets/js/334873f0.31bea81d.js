"use strict";(self.webpackChunktextbook_source=self.webpackChunktextbook_source||[]).push([[9797],{4678:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>h,contentTitle:()=>d,default:()=>f,frontMatter:()=>c,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"textbook/chapter_06/filtering/00-10","title":"Design","description":"ABC\'s Requirements","source":"@site/docs/textbook/chapter_06/filtering/00-10.mdx","sourceDirName":"textbook/chapter_06/filtering","slug":"/textbook/chapter_06/filtering/00-10","permalink":"/textbook/docs/textbook/chapter_06/filtering/00-10","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Design"},"sidebar":"textbookSidebar","previous":{"title":"Filtering and Advanced Iteration","permalink":"/textbook/docs/textbook/chapter_06/filtering/"},"next":{"title":"Coding - Introduction","permalink":"/textbook/docs/textbook/chapter_06/filtering/00-20"}}');var n=t(4848),o=t(8453),a=t(2487),r=t(4894),l=t(1012);const c={title:"Design"},d=void 0,h={},u=[{value:"ABC&#39;s Requirements",id:"abcs-requirements",level:2},{value:"Example Data",id:"example-data",level:2},{value:"Designing the App",id:"designing-the-app",level:2},{value:"Ask the user about their circumstances",id:"ask-the-user-about-their-circumstances",level:2},{value:"Evaluate circumstances against list of services",id:"evaluate-circumstances-against-list-of-services",level:2},{value:"Define a list of Services",id:"define-a-list-of-services",level:3},{value:"Evaluate against service criteria",id:"evaluate-against-service-criteria",level:3},{value:"Loop Body",id:"loop-body",level:4},{value:"The age question",id:"the-age-question",level:4},{value:"The gender question",id:"the-gender-question",level:4},{value:"The location question",id:"the-location-question",level:4},{value:"The family question",id:"the-family-question",level:4},{value:"The decision",id:"the-decision",level:4},{value:"Display the list of relevant services",id:"display-the-list-of-relevant-services",level:2}];function m(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return r||x("Flowcharts",!1),r.F01||x("Flowcharts.F01",!0),r.F02||x("Flowcharts.F02",!0),r.F03||x("Flowcharts.F03",!0),r.F03a||x("Flowcharts.F03a",!0),r.F04||x("Flowcharts.F04",!0),r.F05||x("Flowcharts.F05",!0),r.F05a||x("Flowcharts.F05a",!0),r.F05b||x("Flowcharts.F05b",!0),r.F06||x("Flowcharts.F06",!0),r.F06a||x("Flowcharts.F06a",!0),r.F06b||x("Flowcharts.F06b",!0),r.F07||x("Flowcharts.F07",!0),l||x("Tables",!1),l.MappingTable||x("Tables.MappingTable",!0),l.ServiceTable||x("Tables.ServiceTable",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h2,{id:"abcs-requirements",children:"ABC's Requirements"}),"\n",(0,n.jsx)(s.p,{children:"To summarise the key points, ABC require:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"an application that displays a list of emergency accommodation providers tailored\nto the circumstances of the user;"}),"\n",(0,n.jsxs)(s.li,{children:["ABC's existing emergency accommodation database has emergency accommodation\nproviders organised agaisnt these categories:","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"the minimum and maximum ages of clients each service will accept;"}),"\n",(0,n.jsx)(s.li,{children:"the genders each service will accept;"}),"\n",(0,n.jsx)(s.li,{children:"whether the servics accommodates families or individuals only; and"}),"\n",(0,n.jsx)(s.li,{children:"in which part of Adelaide the service is located. ABC's location data is\nbroken down into north, south, east and west."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.li,{children:"a user should be able to select multiple locations if they wish; and"}),"\n",(0,n.jsx)(s.li,{children:"ABC want to maintain the data themselves."}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"example-data",children:"Example Data"}),"\n",(0,n.jsx)(s.p,{children:"ABC have given us a spreadsheet containing a list of service providers, their\ndetails and the above criteria."}),"\n",(0,n.jsx)(l.ServiceTable,{}),"\n",(0,n.jsx)(s.h2,{id:"designing-the-app",children:"Designing the App"}),"\n",(0,n.jsx)(s.p,{children:"Let's walk through designing the app.  We do this by starting out with our high level\nrequirements.  We drill down into each requirement, breaking it down into more and\nmore detail until we get to a point where we have enough detail to write code."}),"\n",(0,n.jsx)(s.p,{children:"We'll work through a series of flowcharts to illustrate this."}),"\n",(0,n.jsx)(s.p,{children:"At the highest level we have this:"}),"\n",(0,n.jsx)(r.F01,{}),"\n",(0,n.jsx)(s.p,{children:"We can draw some assumptions from this highest level:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"list"})," implies iteration;"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"tailored to"})," implies a decision tree or some decision-making process; and"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"circumstances of"})," implies asking the user questions which likely to feed the\ndecision-making process."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"We can also get an idea of how the app will run ie:"}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"ask the user about their circumstances;"}),"\n",(0,n.jsx)(s.li,{children:"evaluate the user's circumstances against the list of services and make a\ndecision on which services are relevant and should be displayed"}),"\n",(0,n.jsx)(s.li,{children:"Display the list of relevant services to the user"}),"\n"]}),"\n",(0,n.jsx)(r.F02,{}),"\n",(0,n.jsx)(s.p,{children:"Let's deal with each of these in turn"}),"\n",(0,n.jsx)(s.h2,{id:"ask-the-user-about-their-circumstances",children:"Ask the user about their circumstances"}),"\n",(0,n.jsx)(s.p,{children:"We need to ask users questions so we can provide them with a relevant list\nof services.  The questions we need to ask must relate to the criteria\nagainst which the services are organised ie: age, gender, location and family,\nas ultimately we will filter out irrelevant based on these criteria."}),"\n",(0,n.jsx)(r.F03,{}),"\n",(0,n.jsx)(s.p,{children:"We probably know enough now to make some notes as to how we are going to code\nthese questions.  For example we can choose variable names and data types."}),"\n",(0,n.jsx)(r.F03a,{}),"\n",(0,n.jsx)(s.p,{children:"We've managed to get to a level of detail sufficient for us to write code to\nimplement this user circumstances part of our app.  We can leave things here\nfor now and drill down into the other parts."}),"\n",(0,n.jsx)(s.h2,{id:"evaluate-circumstances-against-list-of-services",children:"Evaluate circumstances against list of services"}),"\n",(0,n.jsx)(s.p,{children:"We can break this part down into two sub-parts:"}),"\n",(0,n.jsx)(r.F04,{}),"\n",(0,n.jsx)(s.p,{children:"Let's deal with each of these in turn"}),"\n",(0,n.jsx)(s.h3,{id:"define-a-list-of-services",children:"Define a list of Services"}),"\n",(0,n.jsxs)(s.p,{children:["If you refer back to ",(0,n.jsx)(a.DisplayChapter,{chapter:"chapter_05"})," you will see some\nsimilarity between ABC's data and\nthe ",(0,n.jsx)(s.a,{href:"/docs/textbook/chapter_05/00-50#multidimensional-data",children:"multidimensional data structures"})," we discussed in\nthat chapter.  It follows, therefore, that we should use a ",(0,n.jsx)(a.DisplayGlossaryItem,{item:"datablock"}),"\nto store our customer data."]}),"\n",(0,n.jsx)(s.p,{children:"In addition we will store our data block in a separate file.  This will make it (slightly) easier\nfor ABC staff to find and modify their list of services."}),"\n",(0,n.jsxs)(s.p,{children:["The columns in our ",(0,n.jsx)(s.a,{href:"#example-data",children:"data table"})," will map to keys in our data structure. Some keys will be\nused to store simple data structures, such as strings and integers, and others will store complex data\nstructures.  Here are some thoughts on how we can map ABC's data table into a data block:"]}),"\n",(0,n.jsx)(l.MappingTable,{}),"\n",(0,n.jsxs)(s.p,{children:["Let's call our data block ",(0,n.jsx)(s.code,{children:"MJFservices"}),".  The first entry in our data block would look something like this:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yml",children:"variable name: MJFservices\nuse objects: True\ndata:\n  - name: ABC Services\n    website: https://abcsvc.org.au\n    min_age: 18\n    max_age: 65\n    gender:\n      - Male\n      - Female\n    location:\n      - North\n      - East\n    family:\n      - Family\n      - Single\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Like our ",(0,n.jsx)(s.a,{href:"#evaluate-circumstances-against-list-of-services",children:"user circumstances"})," we are now at a level of\ndetail where we can start writing code.  So, let's leave the data structure for now and let's look\nat how our data will be processed."]}),"\n",(0,n.jsx)(s.h3,{id:"evaluate-against-service-criteria",children:"Evaluate against service criteria"}),"\n",(0,n.jsx)(s.p,{children:"This aspect forms the heart of our app. This is where we make the decisions about what our user\nshould be presented with.  It's where we determine which services are relevant and which are not."}),"\n",(0,n.jsx)(s.p,{children:"Let's map out what this would look like:"}),"\n",(0,n.jsx)(r.F05,{}),"\n",(0,n.jsx)(s.p,{children:"Once again it looks like we can break this out into two parts: a loop and a loop body\n(ie: the logic to be performed inside the loop)"}),"\n",(0,n.jsx)(r.F05a,{}),"\n",(0,n.jsxs)(s.p,{children:["We have already encountered ",(0,n.jsx)(s.a,{href:"/docs/textbook/chapter_05/00-30#for-loop-syntax",children:"'for loop' syntax"})," and we can see that\nwe can express the loop part of our flow diagram as a `for loop'."]}),"\n",(0,n.jsx)(r.F05b,{}),"\n",(0,n.jsxs)(s.p,{children:["That syntax states we will place each service into the ",(0,n.jsx)(s.code,{children:"a_service"})," special variable as we iterate over the\n",(0,n.jsx)(s.code,{children:"MJFservices"})," list."]}),"\n",(0,n.jsx)(s.p,{children:"That's our for loop ready to code!  Now let's look at the loop body"}),"\n",(0,n.jsx)(s.h4,{id:"loop-body",children:"Loop Body"}),"\n",(0,n.jsx)(s.p,{children:"Let's isolate the loop body:"}),"\n",(0,n.jsx)(r.F06,{}),"\n",(0,n.jsx)(s.p,{children:"The first part we need to deal with is the question 'Does the service meet the user's circumstances?'.\nLet's break that down further.  What are these 'circumstances'?  As discussed previously, these are:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"the user's age;"}),"\n",(0,n.jsx)(s.li,{children:"the user's gender;"}),"\n",(0,n.jsx)(s.li,{children:"the desired locations of the services; and"}),"\n",(0,n.jsx)(s.li,{children:"whether the user is looking for family or single accommodation."}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["It follows then that our 'circumstances' question is actually four questions.  Let's\nrevisit our loop body.  Because this is the loop body, each service we deal with will\nbe placed in ",(0,n.jsx)(s.code,{children:"a_service"})," as we iterate over ",(0,n.jsx)(s.code,{children:"MJFservices"}),"."]}),"\n",(0,n.jsxs)(s.p,{children:["Also, as you recall from ",(0,n.jsx)(s.a,{href:"#ask-the-user-about-their-circumstances",children:"above"}),", the user's information\nis stored in ",(0,n.jsx)(s.code,{children:"MJFage"}),", ",(0,n.jsx)(s.code,{children:"MJFgender"}),", ",(0,n.jsx)(s.code,{children:"MJFlocation"})," and ",(0,n.jsx)(s.code,{children:"MJFfamily"}),"."]}),"\n",(0,n.jsx)(r.F06a,{}),"\n",(0,n.jsxs)(s.p,{children:["We are asking a set of 'yes/no' questions.  As soon as you see 'yes/no' you should be thinking\n",(0,n.jsx)(a.DisplayGlossaryItem,{item:"boolean",plurals:!0}),".  'Yes' is ",(0,n.jsx)(s.code,{children:"True"})," and 'No' is ",(0,n.jsx)(s.code,{children:"False"})," in our context."]}),"\n",(0,n.jsx)(s.p,{children:"We need to ask each of the four questions first and then check their answers to determine if\nthis particular service meets our criteria.  Let's do that as follows:"}),"\n",(0,n.jsx)(r.F06b,{}),"\n",(0,n.jsx)(s.p,{children:"Now we need to work out how to ask each question."}),"\n",(0,n.jsx)(s.h4,{id:"the-age-question",children:"The age question"}),"\n",(0,n.jsxs)(s.p,{children:["This one is pretty simple.  We need to check is ",(0,n.jsx)(s.code,{children:"MJFage"})," falls between ",(0,n.jsx)(s.code,{children:"min_age"})," and ",(0,n.jsx)(s.code,{children:"max_age"}),".\nWe should include each of ",(0,n.jsx)(s.code,{children:"min_age"})," and ",(0,n.jsx)(s.code,{children:"max_age"})," in our limits.  For example, a user should\nqualify for ABC Services if they are 18, not 19."]}),"\n",(0,n.jsxs)(s.p,{children:["We also need to deal with the 'or over' that appears in our data table.  We'll choose the least\nsophisticated way to do this and where an agency has an 'or over' in its age limit we'll set\n",(0,n.jsx)(s.code,{children:"max_age"})," to 999.  Even biblical figures never lived that long!"]}),"\n",(0,n.jsxs)(s.p,{children:["We're then left with a rather simple ",(0,n.jsx)(s.a,{href:"/docs/textbook/chapter_03/00-30#mathematical-tests",children:"mathematical test"})," to apply.\nWe want to apply one of the 'In between' tests we covered in ",(0,n.jsx)(a.DisplayChapter,{chapter:"chapter_03"})," ie:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"MJFage_ok = 18 <= MJFage <= 65\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This statement evaluates whether MJFage is between 18 and 65 inclusive and stores the result (",(0,n.jsx)(s.code,{children:"True"})," or ",(0,n.jsx)(s.code,{children:"False"}),")\nin ",(0,n.jsx)(s.code,{children:"MJFage_ok"}),"."]}),"\n",(0,n.jsx)(s.h4,{id:"the-gender-question",children:"The gender question"}),"\n",(0,n.jsxs)(s.p,{children:["This question is only slightly more complicated.  The user is asked to choose one gender and\ntheir response is stored in ",(0,n.jsx)(s.code,{children:"MJFgender"}),".  Each service in ",(0,n.jsx)(s.code,{children:"MJFservices"})," stores applicable genders as\na list in each record's ",(0,n.jsx)(s.code,{children:"gender"})," key.  Consequently, we need to test for ",(0,n.jsx)(s.a,{href:"/docs/textbook/chapter_05/00-20#list-membership",children:"list membership"}),"\nas we discussed in ",(0,n.jsx)(a.DisplayChapter,{chatper:"chapter_05"}),".  We could do something like this:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"MJFgender_ok = MJFgender in a_service['gender']\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This statement tests to see if ",(0,n.jsx)(s.code,{children:"MJFgender"})," is a member of the list in ",(0,n.jsx)(s.code,{children:"a_service['gender']"})," and stores the\nresult in ",(0,n.jsx)(s.code,{children:"MJFgender_ok"}),"."]}),"\n",(0,n.jsx)(s.admonition,{type:"note",children:(0,n.jsxs)(s.p,{children:["Remember that we refer to values of dictionary keys using the ",(0,n.jsx)(s.a,{href:"/docs/textbook/chapter_05/00-40#referencing",children:"key name"})]})}),"\n",(0,n.jsx)(s.h4,{id:"the-location-question",children:"The location question"}),"\n",(0,n.jsxs)(s.p,{children:["This question is a bit more complex than the others.  This is because ABC wants users to look\nfor services in more than one location.  We have already ",(0,n.jsx)(s.a,{href:"#ask-the-user-about-their-circumstances",children:"decided"}),"\nto use the ",(0,n.jsx)(s.a,{href:"https://docassemble.org/docs/fields.html#fields%20checkboxes",children:(0,n.jsx)(s.code,{children:"checkboxes"})}),"\ndata type to collect location data.  This means we'll be presented with a dictionary of locations, each with\na ",(0,n.jsx)(s.code,{children:"True"})," or ",(0,n.jsx)(s.code,{children:"False"})," assigned indicating wether that location was selected."]}),"\n",(0,n.jsxs)(s.p,{children:["We need to check each location the user has selected and check if that location is in the ",(0,n.jsx)(s.code,{children:"location"})," list\nfor each ",(0,n.jsx)(s.code,{children:"a_service"}),".  The test is similar to the gender test above but we need to run that test for\neach location the user has selected:"]}),"\n",(0,n.jsx)(r.F07,{}),"\n",(0,n.jsx)(s.h4,{id:"the-family-question",children:"The family question"}),"\n",(0,n.jsxs)(s.p,{children:["This logic is very simliar to the gender question as, like the gender question, ",(0,n.jsx)(s.code,{children:"MJFfamily"})," contains only one\nvalue which must be matched against items ",(0,n.jsx)(s.code,{children:"a_service['family']"}),".  The code will end up looking something\nlike this:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"MJFfamily_ok = MJFfamily in a_service['family']\n"})}),"\n",(0,n.jsx)(s.h4,{id:"the-decision",children:"The decision"}),"\n",(0,n.jsxs)(s.p,{children:["We will use an ",(0,n.jsx)(a.DisplayGlossaryItem,{item:"ifstatement"})," to code our decision.  The if statement will\ntest that each of ",(0,n.jsx)(s.code,{children:"MJFage_ok"}),", ",(0,n.jsx)(s.code,{children:"MJFgender_ok"}),", ",(0,n.jsx)(s.code,{children:"MJFlocation_ok"})," and ",(0,n.jsx)(s.code,{children:"MJFfamily_ok"})," are ",(0,n.jsx)(s.code,{children:"True"}),".  To do this\nwe use a series of ",(0,n.jsx)(s.code,{children:"and"})," ",(0,n.jsx)(s.a,{href:"/docs/textbook/chapter_03/00-30#logic-tests",children:"logic tests"})," chained together.  If\nthe test passes then we'll add ",(0,n.jsx)(s.code,{children:"a_service"})," to the list of services to display.  If the test fails we won't\ndo anything and just allow the loop to skip to the next ",(0,n.jsx)(s.code,{children:"a_service"})," to process.  Our code will look\nsomething like this:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"if MJFage_ok and MJFgender_ok and MJFlocation_ok and MJFfamily_ok:\n    # This is where we will put the code to add a_service to \n    # the list of services to display\n"})}),"\n",(0,n.jsx)(s.p,{children:"This concludes determining the 'Evaluate circumstances' part of our app.  As we stated before,\nthis part is the most complex part of our app as this is where all the decision-making takes\nplace.  We've had to drill down quite a few levels to get to a level of detail that we can code,\nwhich is a reflection of the complexity.  Nonetheless, we will reap the rewards for going into\nthis level of detail when we code.  We've done all our thinking work already.  At coding time\nwe'll just need to concentrate on translating our flowcharts into code."}),"\n",(0,n.jsx)(s.p,{children:"Before we do that, let's look at the final component of our app - displaying the list of relevant services."}),"\n",(0,n.jsx)(s.h2,{id:"display-the-list-of-relevant-services",children:"Display the list of relevant services"}),"\n",(0,n.jsx)(s.p,{children:"ABC would like us to display the services in a way that shows the service's name as well as\nthe criteria for acceptance.  The user should be able to click on the name and be taken to the\nservice's website."}),"\n",(0,n.jsxs)(s.p,{children:["ABC have also stated that they would like the display page to look nice.  They have told us that\ntheir website uses the ",(0,n.jsx)(s.a,{href:"https://fonts.google.com/specimen/Poppins",children:"Poppins"})," for headings and\n",(0,n.jsx)(s.a,{href:"https://fonts.google.com/specimen/Unna",children:"Unna"})," for body text.  ABC have also supplied us with\ntheir logo:"]}),"\n",(0,n.jsx)(a.DisplayImage,{imageURL:"/img/textbook/chapter_06/filter/ABCInc_logo_white.png",size:"50%"}),"\n",(0,n.jsx)(s.p,{children:"Our final page should make use of the colours in the logo, although not all the colours are\nrequired to be used.  That is up to us."}),"\n",(0,n.jsx)(s.p,{children:"ABC have also said they would like the list to be displayed in a PDF which the user can either\nprint out or email to themselves."}),"\n",(0,n.jsx)(s.p,{children:"We have now completed the design of our app.  It's time to start coding it."})]})}function f(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}function x(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},4894:(e,s,t)=>{t.r(s),t.d(s,{F01:()=>a,F02:()=>l,F03:()=>d,F03a:()=>u,F04:()=>f,F05:()=>p,F05a:()=>g,F05b:()=>w,F06:()=>y,F06a:()=>F,F06b:()=>C,F07:()=>_});var i=t(4848),n=t(8453);function o(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n    id1(Display a <b>list</b> of emergency<br>accommodation providers<br><b>tailored to</b> the <b>circumstances<br>of</b> each user)"})}function a(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}function r(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n    id0(Ask user about their circumstances)\n    id0 --\x3e id1(Evaluate user's circumstances against list of services)\n    id1 --\x3e id2(Display list of relevant services)"})}function l(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}function c(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n    id0(Ask user their age)\n    id1(Ask user their gender)\n    id2(Ask user for which locations<br>they are looking for services)\n    id3(Ask the user if they are<br>looking for accommodation for<br>themselves or their family)\n    \n    %% Invisible links so the boxes appear vertically\n    id0 ~~~ id1 ~~~ id2 ~~~ id3"})}function d(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function h(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n    id0(Ask user their age)\n    id1(Ask user their gender)\n    id2(Ask user for which locations<br>they are looking for services)\n    id3(Ask the user if they are<br>looking for accommodation for<br>themselves or their family)\n\n    co0(Name: <code>MJFage</code><br><code>datatype: integer</code>)\n    co1(Name: <code>MJFgender</code><br>Present genders as radio buttons)\n    co2(Name: <code>MJFlocation</code><br>Use checkboxes so<br>user can select<br>multiple locations)\n    co3(Name: <code>MJFfamily</code><br>Use <code>yesnoradio</code> or regular radio buttons)\n\n    \n    %% Invisible links so the boxes appear vertically\n    id0 ~~~ id1 ~~~ id2 ~~~ id3\n\n    co0 --\x3e id0\n    co1 --\x3e id1\n    co2 --\x3e id2\n    co3 --\x3e id3\n\n\n    %% Define styles for flowchart items.  We want to make comments yellow\n    %% and have a larger font size for regular items\n    classDef commentClass fill:#faffd6,text-align:left\n    classDef questionClass fill:#ffe6bc\n    classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n    classDef itemClass font-size:16pt\n    classDef leftListClass text-align:left\n\n    class co0,co1,co2,co3 commentClass\n"})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}function m(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n    id0(Define a list of services)\n    id1(Evaluate user circumstances<br>against service criteria)\n\n    %% invisible links to stack vertically\n    id0 ~~~ id1"})}function f(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}function x(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n  id1(For each service in the list)\n  id1 --\x3e id2{{Does the service meet the user's circumstances?}}\n  id2 -- Yes --\x3e id3(Add the service to the display list)\n  id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function p(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}function j(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n  subgraph Loop\n    direction TB\n    id1(For each service in the list)\n    subgraph Loop_Body\n        direction TB\n        id2{{Does the service meet the user's circumstances?}}\n        id2 -- Yes --\x3e id3(Add the service to the display list)\n        id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n    end\n    id1 --\x3e Loop_Body\n  end\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function g(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(j,{...e})}):j(e)}function v(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n  subgraph Loop\n    direction TB\n    id1(<code>for a_service in MJFservices:</code>)\n    subgraph Loop_Body\n        direction TB\n        id2{{Does the service meet the user's circumstances?}}\n        id2 -- Yes --\x3e id3(Add the service to the display list)\n        id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n    end\n    id1 --\x3e Loop_Body\n  end\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function w(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(v,{...e})}):v(e)}function b(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n  subgraph Loop_Body\n      direction TB\n      id2{{Does the service meet the user's circumstances?}}\n      id2 -- Yes --\x3e id3(Add the service to the display list)\n      id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n  end\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function y(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(b,{...e})}):b(e)}function k(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n  id1{{Is <code>MJFage</code> between the minimum and maximum age for <code>a_service</code>?}}\n  id2{{Is <code>MJFgender</code> one of the genders listed for <code>a_service</code>?}}\n  id3{{Do any of the locations in <code>MJFlocation</code> match<br>up with the list of locations in <code>a_service</code>?}}\n  id4{{Does <code>MJFfamily</code> match up with any of the<br>family list items in <code>a_service</code>?}}\n\n  id5{{Is the answer 'Yes' to all of the above questions?}}\n  id5 -- Yes --\x3e id6(Add the service to the display list)\n  id5 -- No --\x3e id7(Do not add the service<br>to the display list)\n\n  id1 ~~~ id2 ~~~ id3 ~~~ id4 ~~~ id5\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id1,id2,id3,id4,id5 questionClass"})}function F(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(k,{...e})}):k(e)}function D(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n  id1(Ask the age question and store the result in <code>MJFage_ok</code>)\n  id2(Ask the gender question and store the result in <code>MJFgender_ok</code>)\n  id3(Ask the location question and store the result in <code>MJFlocation_ok</code>)\n  id4(Ask the age question and store the result in <code>MJFage_ok</code>)\n\n  id5{{Is each of <code>MJFage_ok</code>, <code>MJFgender_OK</code>, <code>MJFlocation_ok</code> and <code>MJFfamily_ok</code> equal to <code>True</code>?}}\n  id5 -- Yes --\x3e id6(Add the service to the display list)\n  id5 -- No --\x3e id7(Do not add the service<br>to the display list)\n\n  id1 ~~~ id2 ~~~ id3 ~~~ id4 ~~~ id5\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id1,id2,id3,id4,id5 questionClass"})}function C(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(D,{...e})}):D(e)}function T(e){const s={mermaid:"mermaid",...(0,n.R)(),...e.components};return(0,i.jsx)(s.mermaid,{value:"flowchart TD\n  id0(for each location selected by the user)\n  id0 --\x3e id1{{\"Is the location in <code>a_service['location']</code>?\"}}\n  id1 -- Yes --\x3e id2(Set <code>MJFlocation_ok</code> to <code>True</code>)\n  id1 -- No --\x3e id3(Set <code>MJFlocation_ok</code> to <code>False</code><br>but only if it hasn't already been set to <code>True</code>)\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id1 questionClass"})}function _(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(T,{...e})}):T(e)}},1012:(e,s,t)=>{t.r(s),t.d(s,{MappingTable:()=>l,ServiceTable:()=>a});var i=t(4848),n=t(8453);function o(e){const s={a:"a",...(0,n.R)(),...e.components};return(0,i.jsxs)("table",{className:"complexDataTableExamples",children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Name"}),(0,i.jsx)("th",{children:"Website"}),(0,i.jsx)("th",{children:"Age limits"}),(0,i.jsx)("th",{children:"Genders"}),(0,i.jsx)("th",{children:"Locations"}),(0,i.jsx)("th",{children:"Family or Single"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"ABC Services"}),(0,i.jsx)("td",{children:(0,i.jsx)(s.a,{href:"https://abcsvc.org.au",children:"https://abcsvc.org.au"})}),(0,i.jsx)("td",{children:"18 - 65"}),(0,i.jsx)("td",{children:"Male, Female"}),(0,i.jsx)("td",{children:"North, East"}),(0,i.jsx)("td",{children:"Families, Singles"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"WH Youth"}),(0,i.jsx)("td",{children:(0,i.jsx)(s.a,{href:"https://whyouth.org.au",children:"https://whyouth.org.au"})}),(0,i.jsx)("td",{children:"12 - 17"}),(0,i.jsx)("td",{children:"Male, Female"}),(0,i.jsx)("td",{children:"South"}),(0,i.jsx)("td",{children:"Singles"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"St Mary's Shelter"}),(0,i.jsx)("td",{children:(0,i.jsx)(s.a,{href:"https://stmarys.org.au",children:"https://stmarys.org.au"})}),(0,i.jsx)("td",{children:"12 and over"}),(0,i.jsx)("td",{children:"Female"}),(0,i.jsx)("td",{children:"North"}),(0,i.jsx)("td",{children:"Singles"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"MHI Men's Health"}),(0,i.jsx)("td",{children:(0,i.jsx)(s.a,{href:"https://mhimh.org.au",children:"https://mhimh.org.au"})}),(0,i.jsx)("td",{children:"18 and over"}),(0,i.jsx)("td",{children:"Male"}),(0,i.jsx)("td",{children:"North, West"}),(0,i.jsx)("td",{children:"Singles"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"DE Family Shelter"}),(0,i.jsx)("td",{children:(0,i.jsx)(s.a,{href:"https://defsupport.org.au",children:"https://defsupport.org.au"})}),(0,i.jsx)("td",{children:"18 - 65"}),(0,i.jsx)("td",{children:"Male, Female"}),(0,i.jsx)("td",{children:"North, East, West, South"}),(0,i.jsx)("td",{children:"Families"})]})]})}function a(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}function r(e){const s={p:"p",...(0,n.R)(),...e.components};return(0,i.jsxs)("table",{className:"complexDataTableExamples",children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Column Name"}),(0,i.jsx)("th",{children:"Key Name"}),(0,i.jsx)("th",{children:"Data type"}),(0,i.jsx)("th",{children:"Comments"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"Name"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"name"})}),(0,i.jsx)("td",{children:"String"}),(0,i.jsx)("td",{colspan:"2",children:"These first two keys store simple string data types"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"Website"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"website"})}),(0,i.jsx)("td",{children:"String"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"Age limits"}),(0,i.jsxs)("td",{children:[(0,i.jsx)("code",{children:"min_age"})," and ",(0,i.jsx)("code",{children:"max_age"})]}),(0,i.jsx)("td",{children:"Integer"}),(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:"It's easier for us to split out the age limit into minimum and\nmaximum age variables and test that the user's age falls inside\nthe min and max ages. We will need additional code to cope with\nthe 'and over' requirements in some of the data.  We will deal\nwith this when we code the age test."})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"Genders"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"gender"})}),(0,i.jsxs)("td",{children:[(0,i.jsx)(s.p,{children:"A list of strings representing genders.  At a minimum we should\nhave"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"Female"}),(0,i.jsx)("li",{children:"Male"}),(0,i.jsx)("li",{children:"Other"})]}),(0,i.jsx)(s.p,{children:"This will be driven by the data given to us by ABC."})]}),(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:"A user will only be allowed to select one gender as a response."})})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"Locations"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"location"})}),(0,i.jsxs)("td",{children:[(0,i.jsx)(s.p,{children:"A list of locations."}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"North"}),(0,i.jsx)("li",{children:"South"}),(0,i.jsx)("li",{children:"East"}),(0,i.jsx)("li",{children:"West"})]})]}),(0,i.jsx)("td",{children:"It appears from the ABC data that this is suitable for their purposes"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"Family or Single"}),(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"family"})}),(0,i.jsxs)("td",{children:[(0,i.jsx)(s.p,{children:"A list consisting of one or all of"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"Family"}),(0,i.jsx)("li",{children:"Single"})]})]}),(0,i.jsx)("td",{children:(0,i.jsx)(s.p,{children:"Agencies that cater for all clients (ie: those looking for\naccommodation for themselves and those looking for accommodation\nfor themselves and their family) should have both items in their\ndata entry.  Otherwise, the appropriate list item is specified\nie: the data type will be a list containing one item."})})]})]})}function l(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}}}]);
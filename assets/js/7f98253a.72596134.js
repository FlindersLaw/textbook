"use strict";(self.webpackChunktextbook_source=self.webpackChunktextbook_source||[]).push([[6141],{5438:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>y,contentTitle:()=>m,default:()=>b,frontMatter:()=>x,metadata:()=>j,toc:()=>g});var s=t(5893),i=t(1151),o=t(9853);function l(e){const n={li:"li",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(o.DisplayChapter,{chapter:"chapter_05",pinpoint:"00-20",text:"lists"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(o.DisplayChapter,{chapter:"chapter_05",pinpoint:"00-30",text:"Introducing iteration"}),"\n"]}),"\n"]})}function a(e){const n={code:"code",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"# Coding Exercise 4a\n#\n# Introducing Iteration with DAList()\n---\n# Our welcome screen\nmandatory: True\nquestion: Coding Workshop 4a\nsubquestion: |\n  In this exercise we look at a list data type and use iteration\n  to display the elements in the list\nbuttons:\n  - Continue: continue\n---\n# Our mandatory code block. It just calls the final screen\nmandatory: True\ncode: |\n  final_screen\n---\n# Our final screen\nevent: final_screen\nquestion: Final Screen\nsubquestion: |\n  Display the names in `display_list` as a bullet list.\n\n  ${display_list}\nbuttons:\n  - Exit: exit\n  - Restart: restart\n---\n# This code block defines the list with the \n# items to display\ncode: |\n  temp = []\n\n  # Add the data\n  temp.append('Ida Noe')\n\n  # Always assigne the temp variable to the 'real' variable last. \n  # This guarantees that Docassemble always runs the entire code block\n  display_list = temp\n---\n"})})}function r(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}function d(e){const n={code:"code",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"# Coding Exercise 4a\n#\n# Introducing Iteration with DAList()\n---\n# Our welcome screen\nmandatory: True\nquestion: Coding Workshop 4a\nsubquestion: |\n  In this exercise we look at a list data type and use iteration\n  to display the elements in the list\nbuttons:\n  - Continue: continue\n---\n# Our mandatory code block. It just calls the final screen\nmandatory: True\ncode: |\n  final_screen\n---\n# Our final screen\nevent: final_screen\nquestion: Final Screen\nsubquestion: |\n  Display the names in `display_list` as a bullet list.\n\n  % for item in display_list:\n  * ${item}\n  % endfor\nbuttons:\n  - Exit: exit\n  - Restart: restart\n---\n# This code block defines the list with the \n# items to display\ncode: |\n  temp = []\n\n  # Add the data\n  temp.append('Ida Noe')\n  temp.append('Hugo First'),\n  temp.append('Moda Lawn'),\n  temp.append('Kate Jupp'),\n  temp.append('Ayfor Gott'),\n  temp.append('Justin Thyme'),\n  temp.append('Ray Member'),\n  temp.append('Studie Harde'),\n  temp.append('Slacke Hearse')\n\n  # Always assigne the temp variable to the 'real' variable last. \n  # This guarantees that Docassemble always runs the entire code block\n  display_list = temp\n---\n"})})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}const p=(0,s.jsx)((function(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}),{});function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.a)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"background",children:"Background"}),"\n",(0,s.jsxs)(n.p,{children:["In this exercise we are looking at ",(0,s.jsx)(o.DisplayGlossaryItem,{item:"list",plural:!0})," and iteration."]}),"\n",(0,s.jsxs)(n.p,{children:["You will modify the ",(0,s.jsx)(n.a,{href:"#code",children:"code"})," below and:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["add some items to ",(0,s.jsx)(n.code,{children:"display_list"}),"; and"]}),"\n",(0,s.jsxs)(n.li,{children:["display the contents of ",(0,s.jsx)(n.code,{children:"display_list"})," as a bullet list."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"That is, you should display the list so that the output of the list looks something like this:"}),"\n",(0,s.jsx)(o.DisplayImage,{imageURL:"/img/coding_exercises/cw4a-1.png",size:"70%"}),"\n",(0,s.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a new ",(0,s.jsx)(n.a,{href:"/docs/recipes/making_a_project",children:"Playground Project"})," called ",(0,s.jsx)(n.code,{children:"CodingWorkshop4"})]}),"\n",(0,s.jsxs)(n.li,{children:["Copy the ",(0,s.jsx)(n.a,{href:"#code",children:"example code"})," below into a file called ",(0,s.jsx)(n.code,{children:"cw4a.yml"})]}),"\n",(0,s.jsxs)(n.li,{children:["Add an extra four names to ",(0,s.jsx)(n.code,{children:"display_list"})]}),"\n",(0,s.jsxs)(n.li,{children:["Use a ",(0,s.jsx)(o.DisplayGlossaryItem,{item:"mako",upper:!0})," ",(0,s.jsx)(n.code,{children:"for"})," loop to display the list items formatted as a bullet list"]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{title:"hints",type:"tip",children:[(0,s.jsx)(n.h4,{id:"adding-the-names-to-the-list",children:"Adding the names to the list"}),(0,s.jsx)(n.p,{children:"There's a code block at the end of the example code.  The first name has been added for you. Use this as an example."}),(0,s.jsx)(n.h4,{id:"displaying-the-bullet-list",children:"Displaying the bullet list"}),(0,s.jsx)(n.p,{children:"To display the bullet list you will need to:"}),(0,s.jsxs)(n.p,{children:["1.delete this line from ",(0,s.jsx)(n.code,{children:"final_screen"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"  ${display_list}\n"})}),(0,s.jsxs)(n.p,{children:["2 replace that line with your ",(0,s.jsx)(n.code,{children:"for"})," loop.  You should only need three lines of code"]})]}),"\n",(0,s.jsx)(n.h2,{id:"code",children:"Code"}),"\n",(0,s.jsx)(n.p,{children:"Copy this code into your playground as a starting point for this exercise."}),"\n",(0,s.jsx)(r,{}),"\n",(0,s.jsxs)(t,{children:[(0,s.jsx)("summary",{children:(0,s.jsx)(n.p,{children:"Solution Code"})}),(0,s.jsx)(c,{})]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}const x={title:"Exercise 4a"},m=void 0,j={id:"coding_exercises/coding_workshop_4/cw4a",title:"Exercise 4a",description:"",source:"@site/docs/coding_exercises/coding_workshop_4/cw4a.mdx",sourceDirName:"coding_exercises/coding_workshop_4",slug:"/coding_exercises/coding_workshop_4/cw4a",permalink:"/textbook/docs/coding_exercises/coding_workshop_4/cw4a",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Exercise 4a"},sidebar:"codingExercisesSidebar",previous:{title:"Coding Workshop 4",permalink:"/textbook/docs/coding_exercises/coding_workshop_4/"},next:{title:"Exercise 4b",permalink:"/textbook/docs/coding_exercises/coding_workshop_4/cw4b"}},y={},g=[...[{value:"Background",id:"background",level:2},{value:"Steps",id:"steps",level:2},{value:"Adding the names to the list",id:"adding-the-names-to-the-list",level:4},{value:"Displaying the bullet list",id:"displaying-the-bullet-list",level:4},{value:"Code",id:"code",level:2}]];function f(e){return(0,s.jsx)(o.DisplayInlineExercise,{video:p,children:(0,s.jsx)(u,{})})}function b(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(f,{...e})}):f()}}}]);
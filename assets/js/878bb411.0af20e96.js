"use strict";(self.webpackChunktextbook_source=self.webpackChunktextbook_source||[]).push([[221],{5546:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=s(5893),i=s(1151);s(9853),s(6214),s(9245);const o={title:"Source Code Library"},a=void 0,r={id:"textbook/chapter_06/filtering/00-70",title:"Source Code Library",description:"main.yml",source:"@site/docs/textbook/chapter_06/filtering/00-70.mdx",sourceDirName:"textbook/chapter_06/filtering",slug:"/textbook/chapter_06/filtering/00-70",permalink:"/textbook/docs/textbook/chapter_06/filtering/00-70",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Source Code Library"},sidebar:"textbookSidebar",previous:{title:"Coding - Display relevant services",permalink:"/textbook/docs/textbook/chapter_06/filtering/00-60"},next:{title:"Chapter 7. Making Your App Beautiful",permalink:"/textbook/docs/textbook/chapter_07/"}},l={},c=[{value:"<code>main.yml</code>",id:"mainyml",level:2},{value:"<code>questions.yml</code>",id:"questionsyml",level:2},{value:"<code>services.yml</code>",id:"servicesyml",level:2},{value:"<code>process_data.yml</code>",id:"process_datayml",level:2},{value:"<code>tests.yml</code>",id:"testsyml",level:2},{value:"<code>ABC_styles.css</code>",id:"abc_stylescss",level:2},{value:"Other resources",id:"other-resources",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"mainyml",children:(0,t.jsx)(n.code,{children:"main.yml"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",metastring:"showLineNumbers",children:"---\ninclude:\n  - questions.yml\n  - services.yml\n  - tests.yml\n  - process_data.yml\n---\nfeatures:\n  css: ABC_styles.css\n---\nobjects:\n  - ABClogo: DAStaticFile.using(filename='ABCInc_logo_white.png')\n---\ndefault screen parts:\n  post: |\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300&display=swap\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Unna&display=swap\" rel=\"stylesheet\">\n---\nmandatory: True\ncode: |\n  set_parts(logo='<img src=\"' + ABClogo.url_for() + '\" style=\"height: 50px;\">')\n---\nmandatory: True\nquestion: Welcome screen\nsubquestion: |\n  Welcome screen text will go here eventually.\nbuttons:\n  - Continue: continue\n  - Exit: exit\n  - Restart: restart\n---\n# This code block drives our app\nmandatory: True\ncode: |\n  final_screen\n---\n# This is our final screen\nevent: final_screen\nquestion: Final Screen\nsubquestion: |\n  Some introductory text will go here.\n\n  You entered the following information\n\n  Age|Gender|Service Locations|Type of Accommodation\n  ---|---|---|---\n  ${MJFage}|${MJFgender}|${MJFlocation.true_values()}|${MJFfamily_display}\n\n  Here are a list of services relevant to your circumstances.\n\n  ${relevant_services_table}\nattachment:\n  docx template file: ABCtemplate.docx\n  filename: \"ABC Inc Emergency Accommodation Services\"\n  valid formats:\n    - pdf\nbuttons:\n  - Exit: exit\n  - Restart: restart\n---\ncode: |\n  if MJFfamily == 'family':\n    MJFfamily_display = 'Accommodation for your family'\n  elif MJFfamily == 'single':\n    MJFfamily_display = 'Accommodation for yourself'\n  else:\n    MJFfamily_display = 'Error invalid value for MJFfamily: {}'.format(MJFfamily)\n---\n"})}),"\n",(0,t.jsx)(n.h2,{id:"questionsyml",children:(0,t.jsx)(n.code,{children:"questions.yml"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",metastring:"showLineNumbers",children:"---\nquestion: Age\nfields:\n - Enter your age: MJFage\n   datatype: integer\n   min: 0\n---\nquestion: Gender\nfields:\n  - Select your gender: MJFgender\n    datatype: radio\n    choices:\n      - Female\n      - Male\n      - Other\n---\nquestion: Location\nsubquestion: |\n  Select the location or locations where you are looking for services.\n\n  You may select as many locations as you like\nfields:\n  - no label: MJFlocation\n    datatype: checkboxes\n    choices:\n      - North\n      - South\n      - East\n      - West\n---\nquestion: Accommodation type\nsubquestion: |\n  Are you looking or accommodation just for yourself or\n  for yourself and your family?\nfields:\n  - no label: MJFfamily\n    datatype: radio\n    choices:\n      - I am looking for accommodation for myself: single\n      - I am looking for accommodation for my family: family\n---\n"})}),"\n",(0,t.jsx)(n.h2,{id:"servicesyml",children:(0,t.jsx)(n.code,{children:"services.yml"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",metastring:"showLineNumbers",children:'---\nvariable name: MJFservices\nuse objects: True\ndata:\n  - name: ABC Services\n    website: https://abcsvc.org.au\n    min_age: 18\n    max_age: 65\n    gender:\n      - Male\n      - Female\n    location:\n      - North\n      - East\n    family:\n      - family\n      - single\n  - name: WH Youth\n    website: https://whyouth.org.au\n    min_age: 12\n    max_age: 17\n    gender:\n      - Male\n      - Female\n      - Other\n    location:\n      - South\n    family:\n      - single\n  - name: "St Mary\'s Shelter"\n    website: https://stmarys.org.au\n    min_age: 12\n    max_age: 999\n    gender:\n      - Female\n      - Other\n    location:\n      - North\n    family:\n      - single\n  - name: "MHI Men\'s Health"\n    website: https://mhimh.org.au\n    min_age: 18\n    max_age: 999\n    gender:\n      - Male\n    location:\n      - North\n      - West\n    family:\n      - single\n  - name: DE Family Shelter\n    website: https://defsupport.org.au\n    min_age: 18\n    max_age: 65\n    gender:\n      - Male\n      - Female\n    location:\n      - North\n      - East\n      - West\n      - South\n    family:\n      - family\n---\n'})}),"\n",(0,t.jsx)(n.h2,{id:"process_datayml",children:(0,t.jsx)(n.code,{children:"process_data.yml"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",metastring:"showLineNumbers",children:"---\nobjects:\n  - MJFrelevant_services: DAList.using(auto_gather=False)\n---\ncode: |\n  MJFrelevant_services.clear()\n  for a_service in MJFservices:\n\n    # Set MJFage_ok\n    MJFage_ok = a_service['min_age'] <= MJFage <= a_service['max_age']\n\n    # Set MJFgender_ok\n    MJFgender_ok = MJFgender in a_service['gender']\n\n    # Set MJFlocation_ok\n    MJFlocation_ok = False\n    for a_location in MJFlocation.true_values():\n      if a_location in a_service['location']:\n        MJFlocation_ok = True\n\n    # Set MJFfamily_ok\n    MJFfamily_ok = MJFfamily in a_service['family']\n\n    # Test criteria and add to relevant services list\n    if MJFage_ok and MJFgender_ok and MJFlocation_ok and MJFfamily_ok:\n      MJFrelevant_services.append(a_service)\n\n  # How we tell Docassemble we've finished gathering relevant services\n  # into MJFrelevant_services\n  MJFrelevant_services.gathered = True\n---\ntable: relevant_services_table\nrows: MJFrelevant_services\ncolumns:\n  - Name: |\n      \"[{}]({})\".format(row_item['name'], row_item['website'])\n  - Age Range: |\n      \"{} to {}\".format(row_item['min_age'], row_item['max_age'])\n  - Gender: row_item['gender']\n  - Locations: row_item['location']\n  - Family: row_item['family']\n---\ncode: |\n  MJFservices[i]['service_link'] = \"[{}]({})\".format(\n    MJFservices[i]['name'],\n    MJFservices[i]['website']\n  )\n---\n"})}),"\n",(0,t.jsx)(n.h2,{id:"testsyml",children:(0,t.jsx)(n.code,{children:"tests.yml"})}),"\n",(0,t.jsx)(n.p,{children:"This is not necessary for the final working version of the app but is included for\ncompleteness"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yml",metastring:"showLineNumbers",children:"---\ntable: services_test_table\nrows: MJFservices\ncolumns:\n  - Name: row_item['name']\n  - Website: row_item['website']\n  - Age Range: |\n      \"{} to {}\".format(row_item['min_age'], row_item['max_age'])\n  - Gender: row_item['gender']\n  - Locations: row_item['location']\n  - Family: row_item['family']\n---\ntable: relevant_services_test_table\nrows: MJFrelevant_services\ncolumns:\n  - Name: row_item['name']\n  - Website: row_item['website']\n  - Age Range: |\n      \"{} to {}\".format(row_item['min_age'], row_item['max_age'])\n  - Gender: row_item['gender']\n  - Locations: row_item['location']\n  - Family: row_item['family']\n---\n"})}),"\n",(0,t.jsx)(n.h2,{id:"abc_stylescss",children:(0,t.jsx)(n.code,{children:"ABC_styles.css"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-css",metastring:"showLineNumbers",children:":root {\n  --ABC-darkest: rgb(10,62,92);\n  --ABC-darker: rgb(9,115,150);\n  --ABC-light: rgb(25,175,189);\n  --ABC-sun: rgb(205,146,79);\n  --ABC-sun-lighter: rgb(248,238,228);\n}\n\n.navbar{\n  background-color: white !important;\n  border-bottom: 5px solid var(--ABC-darkest);\n}\n\n.da-page-header {\n  font-family: 'Poppins', sans-serif;\n}\n\n.da-subquestion {\n    font-family: 'Unna', sans-serif;\n    font-size: 18pt; \n}\n\n.da-form-label {\n  font-family: 'Unna', sans-serif;\n  font-size: 1.2em;\n}\n\n.dalabelauty {\n  font-family: 'Unna', sans-serif;\n  font-size: 1.2em;\n}\n\n.table {\n    border: 5px solid var(--ABC-darkest);\n}\n\n/* This makes the column headings dark and the text white */\n.table th {\n  background-color: var(--ABC-darkest);\n  color: white;\n}\n\n/* We shrink the text a little in the table cells */\n.table td {\n  font-size: 0.8em;\n}\n\n/* Docassemble is highlighting every odd cell in grey.\n * we are going to use a lighter version of the colour\n * of the sun in the ABC logo */\n.table tr:nth-child(odd) {\n  background-color: var(--ABC-sun-lighter);\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"other-resources",children:"Other resources"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(4874).Z+"",children:"ABC logo"})]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(2932).Z+"",children:"Word Template"})]})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},6214:(e,n,s)=>{s.r(n),s.d(n,{F01:()=>a,F02:()=>l,F03:()=>d,F03a:()=>h,F04:()=>u,F05:()=>g,F05a:()=>y,F05b:()=>b,F06:()=>_,F06a:()=>k,F06b:()=>D,F07:()=>M});var t=s(5893),i=s(1151);function o(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    id1(Display a <b>list</b> of emergency<br>accommodation providers<br><b>tailored to</b> the <b>circumstances<br>of</b> each user)"})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}function r(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    id0(Ask user about their circumstances)\n    id0 --\x3e id1(Evaluate user's circumstances against list of services)\n    id1 --\x3e id2(Display list of relevant services)"})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}function c(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    id0(Ask user their age)\n    id1(Ask user their gender)\n    id2(Ask user for which locations<br>they are looking for services)\n    id3(Ask the user if they are<br>looking for accommodation for<br>themselves or their family)\n    \n    %% Invisible links so the boxes appear vertically\n    id0 ~~~ id1 ~~~ id2 ~~~ id3"})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function m(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    id0(Ask user their age)\n    id1(Ask user their gender)\n    id2(Ask user for which locations<br>they are looking for services)\n    id3(Ask the user if they are<br>looking for accommodation for<br>themselves or their family)\n\n    co0(Name: <code>MJFage</code><br><code>datatype: integer</code>)\n    co1(Name: <code>MJFgender</code><br>Present genders as radio buttons)\n    co2(Name: <code>MJFlocation</code><br>Use checkboxes so<br>user can select<br>multiple locations)\n    co3(Name: <code>MJFfamily</code><br>Use <code>yesnoradio</code> or regular radio buttons)\n\n    \n    %% Invisible links so the boxes appear vertically\n    id0 ~~~ id1 ~~~ id2 ~~~ id3\n\n    co0 --\x3e id0\n    co1 --\x3e id1\n    co2 --\x3e id2\n    co3 --\x3e id3\n\n\n    %% Define styles for flowchart items.  We want to make comments yellow\n    %% and have a larger font size for regular items\n    classDef commentClass fill:#faffd6,text-align:left\n    classDef questionClass fill:#ffe6bc\n    classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n    classDef itemClass font-size:16pt\n    classDef leftListClass text-align:left\n\n    class co0,co1,co2,co3 commentClass\n"})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}function f(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n    id0(Define a list of services)\n    id1(Evaluate user circumstances<br>against service criteria)\n\n    %% invisible links to stack vertically\n    id0 ~~~ id1"})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(f,{...e})}):f(e)}function x(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n  id1(For each service in the list)\n  id1 --\x3e id2{{Does the service meet the user's circumstances?}}\n  id2 -- Yes --\x3e id3(Add the service to the display list)\n  id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function g(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}function p(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n  subgraph Loop\n    direction TB\n    id1(For each service in the list)\n    subgraph Loop_Body\n        direction TB\n        id2{{Does the service meet the user's circumstances?}}\n        id2 -- Yes --\x3e id3(Add the service to the display list)\n        id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n    end\n    id1 --\x3e Loop_Body\n  end\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function y(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}function j(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n  subgraph Loop\n    direction TB\n    id1(<code>for a_service in MJFservices:</code>)\n    subgraph Loop_Body\n        direction TB\n        id2{{Does the service meet the user's circumstances?}}\n        id2 -- Yes --\x3e id3(Add the service to the display list)\n        id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n    end\n    id1 --\x3e Loop_Body\n  end\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function b(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}function v(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n  subgraph Loop_Body\n      direction TB\n      id2{{Does the service meet the user's circumstances?}}\n      id2 -- Yes --\x3e id3(Add the service to the display list)\n      id2 -- No --\x3e id4(Do not add the service<br>to the display list)\n  end\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id2 questionClass"})}function _(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(v,{...e})}):v(e)}function w(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n  id1{{Is <code>MJFage</code> between the minimum and maximum age for <code>a_service</code>?}}\n  id2{{Is <code>MJFgender</code> one of the genders listed for <code>a_service</code>?}}\n  id3{{Do any of the locations in <code>MJFlocation</code> match<br>up with the list of locations in <code>a_service</code>?}}\n  id4{{Does <code>MJFfamily</code> match up with any of the<br>family list items in <code>a_service</code>?}}\n\n  id5{{Is the answer 'Yes' to all of the above questions?}}\n  id5 -- Yes --\x3e id6(Add the service to the display list)\n  id5 -- No --\x3e id7(Do not add the service<br>to the display list)\n\n  id1 ~~~ id2 ~~~ id3 ~~~ id4 ~~~ id5\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id1,id2,id3,id4,id5 questionClass"})}function k(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(w,{...e})}):w(e)}function F(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n  id1(Ask the age question and store the result in <code>MJFage_ok</code>)\n  id2(Ask the gender question and store the result in <code>MJFgender_ok</code>)\n  id3(Ask the location question and store the result in <code>MJFlocation_ok</code>)\n  id4(Ask the age question and store the result in <code>MJFage_ok</code>)\n\n  id5{{Is each of <code>MJFage_ok</code>, <code>MJFgender_OK</code>, <code>MJFlocation_ok</code> and <code>MJFfamily_ok</code> equal to <code>True</code>?}}\n  id5 -- Yes --\x3e id6(Add the service to the display list)\n  id5 -- No --\x3e id7(Do not add the service<br>to the display list)\n\n  id1 ~~~ id2 ~~~ id3 ~~~ id4 ~~~ id5\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id1,id2,id3,id4,id5 questionClass"})}function D(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(F,{...e})}):F(e)}function C(e){const n={mermaid:"mermaid",...(0,i.a)(),...e.components};return(0,t.jsx)(n.mermaid,{value:"flowchart TD\n  id0(for each location selected by the user)\n  id0 --\x3e id1{{\"Is the location in <code>a_service['location']</code>?\"}}\n  id1 -- Yes --\x3e id2(Set <code>MJFlocation_ok</code> to <code>True</code>)\n  id1 -- No --\x3e id3(Set <code>MJFlocation_ok</code> to <code>False</code><br>but only if it hasn't already been set to <code>True</code>)\n\n  %% Define styles for flowchart items.  We want to make comments yellow\n  %% and have a larger font size for regular items\n  classDef commentClass fill:#faffd6,text-align:left\n  classDef questionClass fill:#ffe6bc\n  classDef boundaryClass fill:#eeeeee,text-fill-color:#fff\n  classDef itemClass font-size:16pt\n  classDef leftListClass text-align:left\n\n  class id1 questionClass"})}function M(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(C,{...e})}):C(e)}},9245:(e,n,s)=>{s.r(n),s.d(n,{MappingTable:()=>l,ServiceTable:()=>a});var t=s(5893),i=s(1151);function o(e){const n={a:"a",...(0,i.a)(),...e.components};return(0,t.jsxs)("table",{className:"complexDataTableExamples",children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:"Name"}),(0,t.jsx)("th",{children:"Website"}),(0,t.jsx)("th",{children:"Age limits"}),(0,t.jsx)("th",{children:"Genders"}),(0,t.jsx)("th",{children:"Locations"}),(0,t.jsx)("th",{children:"Family or Single"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"ABC Services"}),(0,t.jsx)("td",{children:(0,t.jsx)(n.a,{href:"https://abcsvc.org.au",children:"https://abcsvc.org.au"})}),(0,t.jsx)("td",{children:"18 - 65"}),(0,t.jsx)("td",{children:"Male, Female"}),(0,t.jsx)("td",{children:"North, East"}),(0,t.jsx)("td",{children:"Families, Singles"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"WH Youth"}),(0,t.jsx)("td",{children:(0,t.jsx)(n.a,{href:"https://whyouth.org.au",children:"https://whyouth.org.au"})}),(0,t.jsx)("td",{children:"12 - 17"}),(0,t.jsx)("td",{children:"Male, Female"}),(0,t.jsx)("td",{children:"South"}),(0,t.jsx)("td",{children:"Singles"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"St Mary's Shelter"}),(0,t.jsx)("td",{children:(0,t.jsx)(n.a,{href:"https://stmarys.org.au",children:"https://stmarys.org.au"})}),(0,t.jsx)("td",{children:"12 and over"}),(0,t.jsx)("td",{children:"Female"}),(0,t.jsx)("td",{children:"North"}),(0,t.jsx)("td",{children:"Singles"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"MHI Men's Health"}),(0,t.jsx)("td",{children:(0,t.jsx)(n.a,{href:"https://mhimh.org.au",children:"https://mhimh.org.au"})}),(0,t.jsx)("td",{children:"18 and over"}),(0,t.jsx)("td",{children:"Male"}),(0,t.jsx)("td",{children:"North, West"}),(0,t.jsx)("td",{children:"Singles"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"DE Family Shelter"}),(0,t.jsx)("td",{children:(0,t.jsx)(n.a,{href:"https://defsupport.org.au",children:"https://defsupport.org.au"})}),(0,t.jsx)("td",{children:"18 - 65"}),(0,t.jsx)("td",{children:"Male, Female"}),(0,t.jsx)("td",{children:"North, East, West, South"}),(0,t.jsx)("td",{children:"Families"})]})]})}function a(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}function r(e){const n={p:"p",...(0,i.a)(),...e.components};return(0,t.jsxs)("table",{className:"complexDataTableExamples",children:[(0,t.jsxs)("tr",{children:[(0,t.jsx)("th",{children:"Column Name"}),(0,t.jsx)("th",{children:"Key Name"}),(0,t.jsx)("th",{children:"Data type"}),(0,t.jsx)("th",{children:"Comments"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Name"}),(0,t.jsx)("td",{children:(0,t.jsx)("code",{children:"name"})}),(0,t.jsx)("td",{children:"String"}),(0,t.jsx)("td",{colspan:"2",children:"These first two keys store simple string data types"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Website"}),(0,t.jsx)("td",{children:(0,t.jsx)("code",{children:"website"})}),(0,t.jsx)("td",{children:"String"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Age limits"}),(0,t.jsxs)("td",{children:[(0,t.jsx)("code",{children:"min_age"})," and ",(0,t.jsx)("code",{children:"max_age"})]}),(0,t.jsx)("td",{children:"Integer"}),(0,t.jsx)("td",{children:(0,t.jsx)(n.p,{children:"It's easier for us to split out the age limit into minimum and\nmaximum age variables and test that the user's age falls inside\nthe min and max ages. We will need additional code to cope with\nthe 'and over' requirements in some of the data.  We will deal\nwith this when we code the age test."})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Genders"}),(0,t.jsx)("td",{children:(0,t.jsx)("code",{children:"gender"})}),(0,t.jsxs)("td",{children:[(0,t.jsx)(n.p,{children:"A list of strings representing genders.  At a minimum we should\nhave"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:"Female"}),(0,t.jsx)("li",{children:"Male"}),(0,t.jsx)("li",{children:"Other"})]}),(0,t.jsx)(n.p,{children:"This will be driven by the data given to us by ABC."})]}),(0,t.jsx)("td",{children:(0,t.jsx)(n.p,{children:"A user will only be allowed to select one gender as a response."})})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Locations"}),(0,t.jsx)("td",{children:(0,t.jsx)("code",{children:"location"})}),(0,t.jsxs)("td",{children:[(0,t.jsx)(n.p,{children:"A list of locations."}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:"North"}),(0,t.jsx)("li",{children:"South"}),(0,t.jsx)("li",{children:"East"}),(0,t.jsx)("li",{children:"West"})]})]}),(0,t.jsx)("td",{children:"It appears from the ABC data that this is suitable for their purposes"})]}),(0,t.jsxs)("tr",{children:[(0,t.jsx)("td",{children:"Family or Single"}),(0,t.jsx)("td",{children:(0,t.jsx)("code",{children:"family"})}),(0,t.jsxs)("td",{children:[(0,t.jsx)(n.p,{children:"A list consisting of one or all of"}),(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:"Family"}),(0,t.jsx)("li",{children:"Single"})]})]}),(0,t.jsx)("td",{children:(0,t.jsx)(n.p,{children:"Agencies that cater for all clients (ie: those looking for\naccommodation for themselves and those looking for accommodation\nfor themselves and their family) should have both items in their\ndata entry.  Otherwise, the appropriate list item is specified\nie: the data type will be a list containing one item."})})]})]})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},4874:(e,n,s)=>{s.d(n,{Z:()=>t});const t=s.p+"assets/files/ABCInc_logo_white-bc045409d39ed20fa96c622d9ad1af55.png"},2932:(e,n,s)=>{s.d(n,{Z:()=>t});const t=s.p+"assets/files/ABCtemplate-2a325c7a3f69fa150c2adafe243f1f87.docx"}}]);
"use strict";(self.webpackChunktextbook_source=self.webpackChunktextbook_source||[]).push([[4176],{5759:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>h,default:()=>j,frontMatter:()=>l,metadata:()=>p,toc:()=>x});var i=s(4848),t=s(8453),o=s(2487);function r(e){const n={li:"li",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(o.DisplayChapter,{chapter:"chapter_05",pinpoint:"00-20",text:"lists"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(o.DisplayChapter,{chapter:"chapter_05",pinpoint:"00-30",text:"Introducing iteration"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(o.DisplayChapter,{chapter:"chapter_03",pinpoint:"00-30",text:"Testing Variables"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(o.DisplayChapter,{chapter:"chapter_04",pinpoint:"00-50",text:"Mako if statements"}),"\n"]}),"\n"]})}const d=(0,i.jsx)((function(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}),{});function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"background",children:"Background"}),"\n",(0,i.jsx)(n.p,{children:"The code for this exercise is supplied for you below.  You should copy this code into your Playground\nso you can modify it according to this exercise."}),"\n",(0,i.jsxs)(n.p,{children:["This code is very similar to the code in ",(0,i.jsx)(n.a,{href:"cw4a",children:"Exercise 4a"}),", the difference being\nthat we are using a ",(0,i.jsx)(n.a,{href:"https://docassemble.org/docs/objects.html#DAList",children:(0,i.jsx)(n.code,{children:"DAList"})})," instead of\na regular Python list."]}),"\n",(0,i.jsxs)(n.p,{children:["Note that we need an ",(0,i.jsx)(n.code,{children:"objects"})," block to declare our ",(0,i.jsx)(n.code,{children:"DAList"})," and our ",(0,i.jsx)(o.DisplayGlossaryItem,{item:"codeblock"}),"\nlooks quite different.  Line 24 is the first line in our code block and it clears any items in ",(0,i.jsx)(n.code,{children:"display_list"}),".\nWe need to do this as Docassemble sometimes runs our code block more than once as it executes our app\n(this is called ",(0,i.jsx)(n.a,{href:"/docs/textbook/chapter_03/00-40#idempotence",children:(0,i.jsx)(n.strong,{children:"idempotence"})}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["Lines 27 to 35 add the items to our list.  In Exercise 4a we defined the list and its elements all in one\ngo.  With a ",(0,i.jsx)(n.code,{children:"DAList"})," the definition happens in the ",(0,i.jsx)(n.code,{children:"objects"})," block so we need to add our elements to our\nalready-defined list.  That's what the ",(0,i.jsx)(n.code,{children:"append()"})," method does."]}),"\n",(0,i.jsxs)(n.p,{children:["Finally, line 38 tells Docassemble that we have gathered all the elements we need into ",(0,i.jsx)(n.code,{children:"display_list"}),"\nand we don't want to add any more.  Gathering is discussed more in ",(0,i.jsx)(n.a,{href:"/docs/textbook/chapter_06/filtering/00-50#bringing-it-all-together",children:"this case study"})]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["You might want to consider setting up a new\n",(0,i.jsx)(n.a,{href:"/docs/textbook/chapter_01/00-30#1-navbar-and-playground-menu",children:"Playground Project"}),"\nfor these coding exercises."]})}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.code,{children:"DAList"})," is part of Docassemble.  Basically, it's a Python list on steroids.\n",(0,i.jsx)(n.code,{children:"DAList"}),"s come with extra functionality over a Python list.  One of these you can see\nif you run the test code as it is.  The list of names is displayed as a sentence with each\nname separated by a comma and the last name preceded with an 'and'.  Compare this to\nthe Python list displayed in ",(0,i.jsx)(n.a,{href:"cw4a",children:"Exercise A"})," which was very much the raw Python\nlist, including the square brackets."]}),(0,i.jsxs)(n.p,{children:["As a general rule when using lists we should use ",(0,i.jsx)(n.code,{children:"DAList"}),"s and when using dictionaries\nwe should use ",(0,i.jsx)(n.code,{children:"DADict"}),"s."]})]}),"\n",(0,i.jsx)(n.h2,{id:"your-task",children:"Your Task"}),"\n",(0,i.jsxs)(n.p,{children:["Like in Exercise 4a you must modify the code to display the contents of ",(0,i.jsx)(n.code,{children:"display_list"})," as\na bullet list.  However, for this exercise you must only display entries that contain the\nletter 'H' in them."]}),"\n",(0,i.jsx)(n.admonition,{title:"hint",type:"tip",children:(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Remember that you should test for both upper-case and lower-case 'H'."}),"\n",(0,i.jsxs)(n.li,{children:["You might want to consider using a ",(0,i.jsx)(n.a,{href:"/docs/textbook/chapter_04/00-60",children:"logical 'or' test"}),"."]}),"\n"]})}),"\n",(0,i.jsxs)(n.p,{children:["Replace the code on line 14 with your code.  Your code should be about five lines long. You will\nneed to use the same ",(0,i.jsx)(n.code,{children:"%for"})," loop you wrote in Exercise 4a but embed an additional ",(0,i.jsx)(n.code,{children:"%if"})," statement\nin it."]}),"\n",(0,i.jsx)(n.h2,{id:"code",children:"Code"}),"\n",(0,i.jsx)(n.p,{children:"Copy this code into your playground as a starting point for this exercise."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",metastring:"showLineNumbers",children:"# Coding Exercise 4b\n#\n# Introducing Iteration with DAList()\n---\nobjects:\n  - display_list: DAList.using(auto_gather=False)\n---\nmandatory: True\nquestion: Coding Workshop 4b\nsubquestion: |\n  Display only the names in `display_list` that\n  contain the letter 'H' in them.\n\n  ${display_list}\n\nbuttons:\n  - Exit: exit\n---\n# This code block defines the list with the \n# items to display\ncode: |\n  # Always clear our the list before you start work\n  # on it in a code block\n  display_list.clear()\n\n  # Add the data\n  display_list.append('Ida Noe')\n  display_list.append('Hugo First'),\n  display_list.append('Moda Lawn'),\n  display_list.append('Kate Jupp'),\n  display_list.append('Ayfor Gott'),\n  display_list.append('Justin Thyme'),\n  display_list.append('Ray Member'),\n  display_list.append('Studie Harde'),\n  display_list.append('Slacke Hearse')\n\n  # Finish by setting gathered to True\n  display_list.gathered = True\n---\n:::\n"})})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}const l={title:"Exercise 4b"},h=void 0,p={id:"coding_exercises/coding_workshop_4/cw4b",title:"Exercise 4b",description:"",source:"@site/docs/coding_exercises/coding_workshop_4/cw4b.mdx",sourceDirName:"coding_exercises/coding_workshop_4",slug:"/coding_exercises/coding_workshop_4/cw4b",permalink:"/textbook/docs/coding_exercises/coding_workshop_4/cw4b",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Exercise 4b"},sidebar:"codingExercisesSidebar",previous:{title:"Exercise 4a",permalink:"/textbook/docs/coding_exercises/coding_workshop_4/cw4a"},next:{title:"Exercise 4c",permalink:"/textbook/docs/coding_exercises/coding_workshop_4/cw4c"}},u={},x=[{value:"Background",id:"background",level:2},{value:"Your Task",id:"your-task",level:2},{value:"Code",id:"code",level:2}];function y(e){return(0,i.jsx)(o.DisplayInlineExercise,{video:d,children:(0,i.jsx)(c,{})})}function j(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(y,{...e})}):y()}}}]);